/*
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Ontology reference details
 */
@Schema(description = "Ontology reference details")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-08-25T02:56:46.257Z[GMT]")
public class VendorOntologyReference {
  @SerializedName("ontologyID")
  private String ontologyID = null;

  @SerializedName("ontologyPrefix")
  private String ontologyPrefix = null;

  @SerializedName("ontologyTerm")
  private String ontologyTerm = null;

  public VendorOntologyReference ontologyID(String ontologyID) {
    this.ontologyID = ontologyID;
    return this;
  }

   /**
   * Ontology unique ID (example: \&quot;0025034\&quot; or \&quot;4577\&quot;)
   * @return ontologyID
  **/
  @Schema(description = "Ontology unique ID (example: \"0025034\" or \"4577\")")
  public String getOntologyID() {
    return ontologyID;
  }

  public void setOntologyID(String ontologyID) {
    this.ontologyID = ontologyID;
  }

  public VendorOntologyReference ontologyPrefix(String ontologyPrefix) {
    this.ontologyPrefix = ontologyPrefix;
    return this;
  }

   /**
   * Ontology identifier prefix (example: \&quot;PO\&quot; or \&quot;NCBITaxon\&quot;)
   * @return ontologyPrefix
  **/
  @Schema(description = "Ontology identifier prefix (example: \"PO\" or \"NCBITaxon\")")
  public String getOntologyPrefix() {
    return ontologyPrefix;
  }

  public void setOntologyPrefix(String ontologyPrefix) {
    this.ontologyPrefix = ontologyPrefix;
  }

  public VendorOntologyReference ontologyTerm(String ontologyTerm) {
    this.ontologyTerm = ontologyTerm;
    return this;
  }

   /**
   * Ontology term string (example: \&quot;leaf\&quot; or \&quot;Zea mays\&quot;)
   * @return ontologyTerm
  **/
  @Schema(description = "Ontology term string (example: \"leaf\" or \"Zea mays\")")
  public String getOntologyTerm() {
    return ontologyTerm;
  }

  public void setOntologyTerm(String ontologyTerm) {
    this.ontologyTerm = ontologyTerm;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VendorOntologyReference vendorOntologyReference = (VendorOntologyReference) o;
    return Objects.equals(this.ontologyID, vendorOntologyReference.ontologyID) &&
        Objects.equals(this.ontologyPrefix, vendorOntologyReference.ontologyPrefix) &&
        Objects.equals(this.ontologyTerm, vendorOntologyReference.ontologyTerm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ontologyID, ontologyPrefix, ontologyTerm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VendorOntologyReference {\n");
    
    sb.append("    ontologyID: ").append(toIndentedString(ontologyID)).append("\n");
    sb.append("    ontologyPrefix: ").append(toIndentedString(ontologyPrefix)).append("\n");
    sb.append("    ontologyTerm: ").append(toIndentedString(ontologyTerm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
