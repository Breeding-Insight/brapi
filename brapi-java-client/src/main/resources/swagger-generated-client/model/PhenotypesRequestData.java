/*
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.client.model.PhenotypesRequestObservation;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * new phenotypes
 */
@Schema(description = "new phenotypes")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-08-25T02:56:46.257Z[GMT]")
public class PhenotypesRequestData {
  @SerializedName("observatioUnitDbId")
  private String observatioUnitDbId = null;

  @SerializedName("observations")
  private List<PhenotypesRequestObservation> observations = new ArrayList<PhenotypesRequestObservation>();

  @SerializedName("studyDbId")
  private String studyDbId = null;

  public PhenotypesRequestData observatioUnitDbId(String observatioUnitDbId) {
    this.observatioUnitDbId = observatioUnitDbId;
    return this;
  }

   /**
   * Get observatioUnitDbId
   * @return observatioUnitDbId
  **/
  @Schema(required = true, description = "")
  public String getObservatioUnitDbId() {
    return observatioUnitDbId;
  }

  public void setObservatioUnitDbId(String observatioUnitDbId) {
    this.observatioUnitDbId = observatioUnitDbId;
  }

  public PhenotypesRequestData observations(List<PhenotypesRequestObservation> observations) {
    this.observations = observations;
    return this;
  }

  public PhenotypesRequestData addObservationsItem(PhenotypesRequestObservation observationsItem) {
    this.observations.add(observationsItem);
    return this;
  }

   /**
   * Get observations
   * @return observations
  **/
  @Schema(required = true, description = "")
  public List<PhenotypesRequestObservation> getObservations() {
    return observations;
  }

  public void setObservations(List<PhenotypesRequestObservation> observations) {
    this.observations = observations;
  }

  public PhenotypesRequestData studyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
    return this;
  }

   /**
   * Get studyDbId
   * @return studyDbId
  **/
  @Schema(required = true, description = "")
  public String getStudyDbId() {
    return studyDbId;
  }

  public void setStudyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PhenotypesRequestData phenotypesRequestData = (PhenotypesRequestData) o;
    return Objects.equals(this.observatioUnitDbId, phenotypesRequestData.observatioUnitDbId) &&
        Objects.equals(this.observations, phenotypesRequestData.observations) &&
        Objects.equals(this.studyDbId, phenotypesRequestData.studyDbId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(observatioUnitDbId, observations, studyDbId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PhenotypesRequestData {\n");
    
    sb.append("    observatioUnitDbId: ").append(toIndentedString(observatioUnitDbId)).append("\n");
    sb.append("    observations: ").append(toIndentedString(observations)).append("\n");
    sb.append("    studyDbId: ").append(toIndentedString(studyDbId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
