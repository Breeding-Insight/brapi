/*
 * BrAPI-Genotyping
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.client.v2.modules.genotype;

import org.apache.commons.lang3.tuple.Pair;
import org.brapi.client.v2.ApiResponse;
import org.brapi.client.v2.model.queryParams.genotype.PlatesQueryParams;
import org.brapi.v2.model.BrAPIAcceptedSearchResponse;
import org.brapi.v2.model.geno.request.BrAPIPlateNewRequest;
import org.brapi.v2.model.geno.request.BrAPIPlateSearchRequest;
import org.brapi.v2.model.geno.response.BrAPIPlateListResponse;
import org.brapi.v2.model.geno.response.BrAPIPlateSingleResponse;
import org.junit.jupiter.api.Test;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.assertThrows;

/**
 * API tests for PlatesApi
 */
public class PlatesApiTest {

    private final PlatesApi api = new PlatesApi();

    /**
     * Get a filtered list of Plates.
     *
     * Get a filtered list of &#x60;Plates&#x60;. Each &#x60;Plate&#x60; is a collection of &#x60;Samples&#x60; that are physically grouped together.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void platesGetTest() throws Exception {
        String sampleDbId = null;
        String sampleName = null;
        String sampleGroupDbId = null;
        String observationUnitDbId = null;
        String plateDbId = null;
        String plateName = null;
        String commonCropName = null;
        String programDbId = null;
        String trialDbId = null;
        String studyDbId = null;
        String germplasmDbId = null;
        String externalReferenceID = null;
        String externalReferenceId = null;
        String externalReferenceSource = null;
        Integer page = null;
        Integer pageSize = null;

        PlatesQueryParams queryParams = new PlatesQueryParams();
        ApiResponse<BrAPIPlateListResponse> response = api.platesGet(queryParams);

        // TODO: test validations
    }
    /**
     * Get the details of a specific Plate.
     *
     * Get the details of a specific &#x60;Plate&#x60;. Each &#x60;Plate&#x60; is a collection of &#x60;Samples&#x60; that are physically grouped together.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void platesPlateDbIdGetTest() throws Exception {
        String plateDbId = null;
        ApiResponse<BrAPIPlateSingleResponse> response = api.platesPlateDbIdGet(plateDbId);

        // TODO: test validations
    }
    /**
     * Submit new Plate entities to the server
     *
     * Submit new Plate entities to the server
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void platesPostTest() throws Exception {
        List<BrAPIPlateNewRequest> body = null;
        ApiResponse<BrAPIPlateListResponse> response = api.platesPost(body);

        // TODO: test validations
    }
    /**
     * Update the details of existing Plates
     *
     * Update the details of existing Plates
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void platesPutTest() throws Exception {
        Map<String, BrAPIPlateNewRequest> body = null;
        ApiResponse<BrAPIPlateListResponse> response = api.platesPut(body);

        // TODO: test validations
    }
    /**
     * Submit a search request for &#x60;Plates&#x60;
     *
     * Submit a search request for &#x60;Plates&#x60;&lt;br/&gt; Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use the corresponding &#x60;GET /search/plates/{searchResultsDbId}&#x60; to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchPlatesPostTest() throws Exception {
        BrAPIPlateSearchRequest body = null;
        ApiResponse<Pair<Optional<BrAPIPlateListResponse>, Optional<BrAPIAcceptedSearchResponse>>> response = api.searchPlatesPost(body);

        // TODO: test validations
    }
    /**
     * Get the results of a &#x60;Plates&#x60; search request
     *
     * Get the results of a &#x60;Plates&#x60; search request &lt;br/&gt; Clients should submit a search request using the corresponding &#x60;POST /search/plates&#x60; endpoint. Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use this endpoint to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchPlatesSearchResultsDbIdGetTest() throws Exception {
        String searchResultsDbId = null;
        Integer page = null;
        Integer pageSize = null;
        ApiResponse<BrAPIPlateListResponse> response = api.searchPlatesSearchResultsDbIdGet(searchResultsDbId, page, pageSize);

        // TODO: test validations
    }
}
