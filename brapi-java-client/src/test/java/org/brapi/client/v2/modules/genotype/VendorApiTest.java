/*
 * BrAPI-Genotyping
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.client.v2.modules.genotype;

import org.brapi.client.v2.ApiResponse;
import org.brapi.client.v2.model.exceptions.ApiException;
import org.brapi.v2.model.geno.response.BrAPIVendorOrderListResponse;
import org.brapi.v2.model.geno.response.BrAPIVendorOrderStatusResponse;
import org.brapi.v2.model.geno.request.BrAPIVendorOrderSubmissionRequest;
import org.brapi.v2.model.geno.response.BrAPIVendorOrderSubmissionSingleResponse;
import org.brapi.v2.model.geno.response.BrAPIVendorPlateListResponse;
import org.brapi.v2.model.geno.response.BrAPIVendorPlateSubmissionIdSingleResponse;
import org.brapi.v2.model.geno.request.BrAPIVendorPlateSubmissionRequest;
import org.brapi.v2.model.geno.response.BrAPIVendorPlateSubmissionSingleResponse;
import org.brapi.v2.model.geno.response.BrAPIVendorResultFileListResponse;
import org.brapi.v2.model.geno.response.BrAPIVendorSpecificationSingleResponse;
import org.junit.jupiter.api.Test;

/**
 * API tests for VendorApi
 */
public class VendorApiTest {

    private final VendorApi api = new VendorApi();

    /**
     * List current available orders
     *
     * List current available orders
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorOrdersGetTest() throws ApiException {
        String orderId = null;
        String submissionId = null;
        Integer page = null;
        Integer pageSize = null;
        
        ApiResponse<BrAPIVendorOrderListResponse> response = api.vendorOrdersGet(orderId, submissionId, page, pageSize);

        // TODO: test validations
    }
    /**
     * Get the Plates for a specific Order
     *
     * Retrieve the plate and sample details of an order being processed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorOrdersOrderIdPlatesGetTest() throws ApiException {
        String orderId = null;
        Integer page = null;
        Integer pageSize = null;
        
        ApiResponse<BrAPIVendorPlateListResponse> response = api.vendorOrdersOrderIdPlatesGet(orderId, page, pageSize);

        // TODO: test validations
    }
    /**
     * Get the results of a specific Order
     *
     * Retrieve the data files generated by the vendors analysis
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorOrdersOrderIdResultsGetTest() throws ApiException {
        String orderId = null;
        Integer page = null;
        Integer pageSize = null;
        
        ApiResponse<BrAPIVendorResultFileListResponse> response = api.vendorOrdersOrderIdResultsGet(orderId, page, pageSize);

        // TODO: test validations
    }
    /**
     * Get the status of a specific Order
     *
     * Retrieve the current status of an order being processed
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorOrdersOrderIdStatusGetTest() throws ApiException {
        String orderId = null;
        
        ApiResponse<BrAPIVendorOrderStatusResponse> response = api.vendorOrdersOrderIdStatusGet(orderId);

        // TODO: test validations
    }
    /**
     * Submit New Order
     *
     * Submit a new order to a vendor
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorOrdersPostTest() throws ApiException {
        BrAPIVendorOrderSubmissionRequest body = null;
        
        ApiResponse<BrAPIVendorOrderSubmissionSingleResponse> response = api.vendorOrdersPost(body);

        // TODO: test validations
    }
    /**
     * Submit a new set of Sample data
     *
     * Submit a new set of Sample data
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorPlatesPostTest() throws ApiException {
        BrAPIVendorPlateSubmissionRequest body = null;
        
        ApiResponse<BrAPIVendorPlateSubmissionIdSingleResponse> response = api.vendorPlatesPost(body);

        // TODO: test validations
    }
    /**
     * Get the data for a submitted set of plates
     *
     * Get data for a submitted set of plates
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorPlatesSubmissionIdGetTest() throws ApiException {
        String submissionId = null;
        
        ApiResponse<BrAPIVendorPlateSubmissionSingleResponse> response = api.vendorPlatesSubmissionIdGet(submissionId);

        // TODO: test validations
    }
    /**
     * Get the Vendor Specifications
     *
     * Defines the plate format specification for the vendor.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorSpecificationsGetTest() throws ApiException {
        
        ApiResponse<BrAPIVendorSpecificationSingleResponse> response = api.vendorSpecificationsGet();

        // TODO: test validations
    }
}
