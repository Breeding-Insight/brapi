/*
 * BrAPI-Core
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.0/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.0\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore20.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.core;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ScaleBaseClassValidValues
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:44:03.583Z[GMT]")
public class ScaleBaseClassValidValues {
    @SerializedName("categories")
    private List<ScaleBaseClassValidValuesCategories> categories = null;

    @SerializedName("max")
    private Integer max = null;

    @SerializedName("maximumValue")
    private String maximumValue = null;

    @SerializedName("min")
    private Integer min = null;

    @SerializedName("minimumValue")
    private String minimumValue = null;

    public ScaleBaseClassValidValues categories(List<ScaleBaseClassValidValuesCategories> categories) {
        this.categories = categories;
        return this;
    }

    public ScaleBaseClassValidValues addCategoriesItem(ScaleBaseClassValidValuesCategories categoriesItem) {
        if (this.categories == null) {
            this.categories = new ArrayList<ScaleBaseClassValidValuesCategories>();
        }
        this.categories.add(categoriesItem);
        return this;
    }

    /**
     * List of possible values with optional labels
     *
     * @return categories
     **/
    @Schema(example = "[{\"label\":\"low\",\"value\":\"0\"},{\"label\":\"medium\",\"value\":\"5\"},{\"label\":\"high\",\"value\":\"10\"}]", description = "List of possible values with optional labels")
    public List<ScaleBaseClassValidValuesCategories> getCategories() {
        return categories;
    }

    public void setCategories(List<ScaleBaseClassValidValuesCategories> categories) {
        this.categories = categories;
    }

    public ScaleBaseClassValidValues max(Integer max) {
        this.max = max;
        return this;
    }

    /**
     * **Deprecated in v2.1** Please use &#x60;maximumValue&#x60;. Github issue number #450  &lt;br&gt;Maximum value for numerical scales. Typically used for data capture control and QC.
     *
     * @return max
     **/
    @Schema(example = "9999", description = "**Deprecated in v2.1** Please use `maximumValue`. Github issue number #450  <br>Maximum value for numerical scales. Typically used for data capture control and QC.")
    public Integer getMax() {
        return max;
    }

    public void setMax(Integer max) {
        this.max = max;
    }

    public ScaleBaseClassValidValues maximumValue(String maximumValue) {
        this.maximumValue = maximumValue;
        return this;
    }

    /**
     * Maximum value for numerical, date, and time scales. Typically used for data capture control and QC.
     *
     * @return maximumValue
     **/
    @Schema(example = "9999", description = "Maximum value for numerical, date, and time scales. Typically used for data capture control and QC.")
    public String getMaximumValue() {
        return maximumValue;
    }

    public void setMaximumValue(String maximumValue) {
        this.maximumValue = maximumValue;
    }

    public ScaleBaseClassValidValues min(Integer min) {
        this.min = min;
        return this;
    }

    /**
     * **Deprecated in v2.1** Please use &#x60;minimumValue&#x60;. Github issue number #450  &lt;br&gt;Minimum value for numerical scales. Typically used for data capture control and QC.
     *
     * @return min
     **/
    @Schema(example = "2", description = "**Deprecated in v2.1** Please use `minimumValue`. Github issue number #450  <br>Minimum value for numerical scales. Typically used for data capture control and QC.")
    public Integer getMin() {
        return min;
    }

    public void setMin(Integer min) {
        this.min = min;
    }

    public ScaleBaseClassValidValues minimumValue(String minimumValue) {
        this.minimumValue = minimumValue;
        return this;
    }

    /**
     * Minimum value for numerical, date, and time scales. Typically used for data capture control and QC.
     *
     * @return minimumValue
     **/
    @Schema(example = "2", description = "Minimum value for numerical, date, and time scales. Typically used for data capture control and QC.")
    public String getMinimumValue() {
        return minimumValue;
    }

    public void setMinimumValue(String minimumValue) {
        this.minimumValue = minimumValue;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ScaleBaseClassValidValues scaleBaseClassValidValues = (ScaleBaseClassValidValues) o;
        return Objects.equals(this.categories, scaleBaseClassValidValues.categories) &&
                Objects.equals(this.max, scaleBaseClassValidValues.max) &&
                Objects.equals(this.maximumValue, scaleBaseClassValidValues.maximumValue) &&
                Objects.equals(this.min, scaleBaseClassValidValues.min) &&
                Objects.equals(this.minimumValue, scaleBaseClassValidValues.minimumValue);
    }

    @Override
    public int hashCode() {
        return Objects.hash(categories, max, maximumValue, min, minimumValue);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ScaleBaseClassValidValues {\n");

        sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
        sb.append("    max: ").append(toIndentedString(max)).append("\n");
        sb.append("    maximumValue: ").append(toIndentedString(maximumValue)).append("\n");
        sb.append("    min: ").append(toIndentedString(min)).append("\n");
        sb.append("    minimumValue: ").append(toIndentedString(minimumValue)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
