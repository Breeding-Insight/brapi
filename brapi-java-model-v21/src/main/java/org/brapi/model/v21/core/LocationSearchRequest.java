/*
 * BrAPI-Core
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.0/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.0\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore20.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.core;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * LocationSearchRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:44:03.583Z[GMT]")
public class LocationSearchRequest {
    @SerializedName("abbreviations")
    private List<String> abbreviations = null;

    @SerializedName("altitudeMax")
    private BigDecimal altitudeMax = null;

    @SerializedName("altitudeMin")
    private BigDecimal altitudeMin = null;

    @SerializedName("commonCropNames")
    private List<String> commonCropNames = null;

    @SerializedName("coordinates")
    private GeoJSONSearchArea coordinates = null;

    @SerializedName("countryCodes")
    private List<String> countryCodes = null;

    @SerializedName("countryNames")
    private List<String> countryNames = null;

    @SerializedName("externalReferenceIDs")
    private List<String> externalReferenceIDs = null;

    @SerializedName("externalReferenceIds")
    private List<String> externalReferenceIds = null;

    @SerializedName("externalReferenceSources")
    private List<String> externalReferenceSources = null;

    @SerializedName("instituteAddresses")
    private List<String> instituteAddresses = null;

    @SerializedName("instituteNames")
    private List<String> instituteNames = null;

    @SerializedName("locationDbIds")
    private List<String> locationDbIds = null;

    @SerializedName("locationNames")
    private List<String> locationNames = null;

    @SerializedName("locationTypes")
    private List<String> locationTypes = null;

    @SerializedName("page")
    private Integer page = null;

    @SerializedName("pageSize")
    private Integer pageSize = null;

    @SerializedName("parentLocationDbIds")
    private List<String> parentLocationDbIds = null;

    @SerializedName("parentLocationNames")
    private List<String> parentLocationNames = null;

    @SerializedName("programDbIds")
    private List<String> programDbIds = null;

    @SerializedName("programNames")
    private List<String> programNames = null;

    public LocationSearchRequest abbreviations(List<String> abbreviations) {
        this.abbreviations = abbreviations;
        return this;
    }

    public LocationSearchRequest addAbbreviationsItem(String abbreviationsItem) {
        if (this.abbreviations == null) {
            this.abbreviations = new ArrayList<String>();
        }
        this.abbreviations.add(abbreviationsItem);
        return this;
    }

    /**
     * A list of shortened human readable names for a set of Locations
     *
     * @return abbreviations
     **/
    @Schema(example = "[\"L1\",\"LHC\"]", description = "A list of shortened human readable names for a set of Locations")
    public List<String> getAbbreviations() {
        return abbreviations;
    }

    public void setAbbreviations(List<String> abbreviations) {
        this.abbreviations = abbreviations;
    }

    public LocationSearchRequest altitudeMax(BigDecimal altitudeMax) {
        this.altitudeMax = altitudeMax;
        return this;
    }

    /**
     * The maximum altitude to search for
     *
     * @return altitudeMax
     **/
    @Schema(example = "200", description = "The maximum altitude to search for")
    public BigDecimal getAltitudeMax() {
        return altitudeMax;
    }

    public void setAltitudeMax(BigDecimal altitudeMax) {
        this.altitudeMax = altitudeMax;
    }

    public LocationSearchRequest altitudeMin(BigDecimal altitudeMin) {
        this.altitudeMin = altitudeMin;
        return this;
    }

    /**
     * The minimum altitude to search for
     *
     * @return altitudeMin
     **/
    @Schema(example = "20", description = "The minimum altitude to search for")
    public BigDecimal getAltitudeMin() {
        return altitudeMin;
    }

    public void setAltitudeMin(BigDecimal altitudeMin) {
        this.altitudeMin = altitudeMin;
    }

    public LocationSearchRequest commonCropNames(List<String> commonCropNames) {
        this.commonCropNames = commonCropNames;
        return this;
    }

    public LocationSearchRequest addCommonCropNamesItem(String commonCropNamesItem) {
        if (this.commonCropNames == null) {
            this.commonCropNames = new ArrayList<String>();
        }
        this.commonCropNames.add(commonCropNamesItem);
        return this;
    }

    /**
     * The BrAPI Common Crop Name is the simple, generalized, widely accepted name of the organism being researched. It is most often used in multi-crop systems where digital resources need to be divided at a high level. Things like &#x27;Maize&#x27;, &#x27;Wheat&#x27;, and &#x27;Rice&#x27; are examples of common crop names.  Use this parameter to only return results associated with the given crops.   Use &#x60;GET /commoncropnames&#x60; to find the list of available crops on a server.
     *
     * @return commonCropNames
     **/
    @Schema(example = "[\"Tomatillo\",\"Paw Paw\"]", description = "The BrAPI Common Crop Name is the simple, generalized, widely accepted name of the organism being researched. It is most often used in multi-crop systems where digital resources need to be divided at a high level. Things like 'Maize', 'Wheat', and 'Rice' are examples of common crop names.  Use this parameter to only return results associated with the given crops.   Use `GET /commoncropnames` to find the list of available crops on a server.")
    public List<String> getCommonCropNames() {
        return commonCropNames;
    }

    public void setCommonCropNames(List<String> commonCropNames) {
        this.commonCropNames = commonCropNames;
    }

    public LocationSearchRequest coordinates(GeoJSONSearchArea coordinates) {
        this.coordinates = coordinates;
        return this;
    }

    /**
     * Get coordinates
     *
     * @return coordinates
     **/
    @Schema(description = "")
    public GeoJSONSearchArea getCoordinates() {
        return coordinates;
    }

    public void setCoordinates(GeoJSONSearchArea coordinates) {
        this.coordinates = coordinates;
    }

    public LocationSearchRequest countryCodes(List<String> countryCodes) {
        this.countryCodes = countryCodes;
        return this;
    }

    public LocationSearchRequest addCountryCodesItem(String countryCodesItem) {
        if (this.countryCodes == null) {
            this.countryCodes = new ArrayList<String>();
        }
        this.countryCodes.add(countryCodesItem);
        return this;
    }

    /**
     * [ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec
     *
     * @return countryCodes
     **/
    @Schema(example = "[\"USA\",\"PER\"]", description = "[ISO_3166-1_alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) spec")
    public List<String> getCountryCodes() {
        return countryCodes;
    }

    public void setCountryCodes(List<String> countryCodes) {
        this.countryCodes = countryCodes;
    }

    public LocationSearchRequest countryNames(List<String> countryNames) {
        this.countryNames = countryNames;
        return this;
    }

    public LocationSearchRequest addCountryNamesItem(String countryNamesItem) {
        if (this.countryNames == null) {
            this.countryNames = new ArrayList<String>();
        }
        this.countryNames.add(countryNamesItem);
        return this;
    }

    /**
     * The full name of the country to search for
     *
     * @return countryNames
     **/
    @Schema(example = "[\"United States of America\",\"Peru\"]", description = "The full name of the country to search for")
    public List<String> getCountryNames() {
        return countryNames;
    }

    public void setCountryNames(List<String> countryNames) {
        this.countryNames = countryNames;
    }

    public LocationSearchRequest externalReferenceIDs(List<String> externalReferenceIDs) {
        this.externalReferenceIDs = externalReferenceIDs;
        return this;
    }

    public LocationSearchRequest addExternalReferenceIDsItem(String externalReferenceIDsItem) {
        if (this.externalReferenceIDs == null) {
            this.externalReferenceIDs = new ArrayList<String>();
        }
        this.externalReferenceIDs.add(externalReferenceIDsItem);
        return this;
    }

    /**
     * **Deprecated in v2.1** Please use &#x60;externalReferenceIds&#x60;. Github issue number #460  &lt;br&gt;List of external reference IDs. Could be a simple strings or a URIs. (use with &#x60;externalReferenceSources&#x60; parameter)
     *
     * @return externalReferenceIDs
     **/
    @Schema(example = "[\"doi:10.155454/12341234\",\"14a19841\"]", description = "**Deprecated in v2.1** Please use `externalReferenceIds`. Github issue number #460  <br>List of external reference IDs. Could be a simple strings or a URIs. (use with `externalReferenceSources` parameter)")
    public List<String> getExternalReferenceIDs() {
        return externalReferenceIDs;
    }

    public void setExternalReferenceIDs(List<String> externalReferenceIDs) {
        this.externalReferenceIDs = externalReferenceIDs;
    }

    public LocationSearchRequest externalReferenceIds(List<String> externalReferenceIds) {
        this.externalReferenceIds = externalReferenceIds;
        return this;
    }

    public LocationSearchRequest addExternalReferenceIdsItem(String externalReferenceIdsItem) {
        if (this.externalReferenceIds == null) {
            this.externalReferenceIds = new ArrayList<String>();
        }
        this.externalReferenceIds.add(externalReferenceIdsItem);
        return this;
    }

    /**
     * List of external reference IDs. Could be a simple strings or a URIs. (use with &#x60;externalReferenceSources&#x60; parameter)
     *
     * @return externalReferenceIds
     **/
    @Schema(example = "[\"doi:10.155454/12341234\",\"14a19841\"]", description = "List of external reference IDs. Could be a simple strings or a URIs. (use with `externalReferenceSources` parameter)")
    public List<String> getExternalReferenceIds() {
        return externalReferenceIds;
    }

    public void setExternalReferenceIds(List<String> externalReferenceIds) {
        this.externalReferenceIds = externalReferenceIds;
    }

    public LocationSearchRequest externalReferenceSources(List<String> externalReferenceSources) {
        this.externalReferenceSources = externalReferenceSources;
        return this;
    }

    public LocationSearchRequest addExternalReferenceSourcesItem(String externalReferenceSourcesItem) {
        if (this.externalReferenceSources == null) {
            this.externalReferenceSources = new ArrayList<String>();
        }
        this.externalReferenceSources.add(externalReferenceSourcesItem);
        return this;
    }

    /**
     * List of identifiers for the source system or database of an external reference (use with &#x60;externalReferenceIDs&#x60; parameter)
     *
     * @return externalReferenceSources
     **/
    @Schema(example = "[\"DOI\",\"Field App Name\"]", description = "List of identifiers for the source system or database of an external reference (use with `externalReferenceIDs` parameter)")
    public List<String> getExternalReferenceSources() {
        return externalReferenceSources;
    }

    public void setExternalReferenceSources(List<String> externalReferenceSources) {
        this.externalReferenceSources = externalReferenceSources;
    }

    public LocationSearchRequest instituteAddresses(List<String> instituteAddresses) {
        this.instituteAddresses = instituteAddresses;
        return this;
    }

    public LocationSearchRequest addInstituteAddressesItem(String instituteAddressesItem) {
        if (this.instituteAddresses == null) {
            this.instituteAddresses = new ArrayList<String>();
        }
        this.instituteAddresses.add(instituteAddressesItem);
        return this;
    }

    /**
     * The street address of the institute to search for
     *
     * @return instituteAddresses
     **/
    @Schema(example = "[\"123 Main Street\",\"456 Side Street\"]", description = "The street address of the institute to search for")
    public List<String> getInstituteAddresses() {
        return instituteAddresses;
    }

    public void setInstituteAddresses(List<String> instituteAddresses) {
        this.instituteAddresses = instituteAddresses;
    }

    public LocationSearchRequest instituteNames(List<String> instituteNames) {
        this.instituteNames = instituteNames;
        return this;
    }

    public LocationSearchRequest addInstituteNamesItem(String instituteNamesItem) {
        if (this.instituteNames == null) {
            this.instituteNames = new ArrayList<String>();
        }
        this.instituteNames.add(instituteNamesItem);
        return this;
    }

    /**
     * The name of the institute to search for
     *
     * @return instituteNames
     **/
    @Schema(example = "[\"The Institute\",\"The Other Institute\"]", description = "The name of the institute to search for")
    public List<String> getInstituteNames() {
        return instituteNames;
    }

    public void setInstituteNames(List<String> instituteNames) {
        this.instituteNames = instituteNames;
    }

    public LocationSearchRequest locationDbIds(List<String> locationDbIds) {
        this.locationDbIds = locationDbIds;
        return this;
    }

    public LocationSearchRequest addLocationDbIdsItem(String locationDbIdsItem) {
        if (this.locationDbIds == null) {
            this.locationDbIds = new ArrayList<String>();
        }
        this.locationDbIds.add(locationDbIdsItem);
        return this;
    }

    /**
     * The location ids to search for
     *
     * @return locationDbIds
     **/
    @Schema(example = "[\"b28911cf\",\"5071d1e4\"]", description = "The location ids to search for")
    public List<String> getLocationDbIds() {
        return locationDbIds;
    }

    public void setLocationDbIds(List<String> locationDbIds) {
        this.locationDbIds = locationDbIds;
    }

    public LocationSearchRequest locationNames(List<String> locationNames) {
        this.locationNames = locationNames;
        return this;
    }

    public LocationSearchRequest addLocationNamesItem(String locationNamesItem) {
        if (this.locationNames == null) {
            this.locationNames = new ArrayList<String>();
        }
        this.locationNames.add(locationNamesItem);
        return this;
    }

    /**
     * A human readable names to search for
     *
     * @return locationNames
     **/
    @Schema(example = "[\"Location Alpha\",\"The Large Hadron Collider\"]", description = "A human readable names to search for")
    public List<String> getLocationNames() {
        return locationNames;
    }

    public void setLocationNames(List<String> locationNames) {
        this.locationNames = locationNames;
    }

    public LocationSearchRequest locationTypes(List<String> locationTypes) {
        this.locationTypes = locationTypes;
        return this;
    }

    public LocationSearchRequest addLocationTypesItem(String locationTypesItem) {
        if (this.locationTypes == null) {
            this.locationTypes = new ArrayList<String>();
        }
        this.locationTypes.add(locationTypesItem);
        return this;
    }

    /**
     * The type of location this represents (ex. Breeding Location, Storage Location, etc)
     *
     * @return locationTypes
     **/
    @Schema(example = "[\"Nursery\",\"Storage Location\"]", description = "The type of location this represents (ex. Breeding Location, Storage Location, etc)")
    public List<String> getLocationTypes() {
        return locationTypes;
    }

    public void setLocationTypes(List<String> locationTypes) {
        this.locationTypes = locationTypes;
    }

    public LocationSearchRequest page(Integer page) {
        this.page = page;
        return this;
    }

    /**
     * Which result page is requested. The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;.
     *
     * @return page
     **/
    @Schema(example = "0", description = "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.")
    public Integer getPage() {
        return page;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public LocationSearchRequest pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    /**
     * The size of the pages to be returned. Default is &#x60;1000&#x60;.
     *
     * @return pageSize
     **/
    @Schema(example = "1000", description = "The size of the pages to be returned. Default is `1000`.")
    public Integer getPageSize() {
        return pageSize;
    }

    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }

    public LocationSearchRequest parentLocationDbIds(List<String> parentLocationDbIds) {
        this.parentLocationDbIds = parentLocationDbIds;
        return this;
    }

    public LocationSearchRequest addParentLocationDbIdsItem(String parentLocationDbIdsItem) {
        if (this.parentLocationDbIds == null) {
            this.parentLocationDbIds = new ArrayList<String>();
        }
        this.parentLocationDbIds.add(parentLocationDbIdsItem);
        return this;
    }

    /**
     * The unique identifier for a Location &lt;br/&gt; The Parent Location defines the encompassing location that this location belongs to.  For example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields.
     *
     * @return parentLocationDbIds
     **/
    @Schema(example = "[\"b28911cf\",\"5071d1e4\"]", description = "The unique identifier for a Location <br/> The Parent Location defines the encompassing location that this location belongs to.  For example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields.")
    public List<String> getParentLocationDbIds() {
        return parentLocationDbIds;
    }

    public void setParentLocationDbIds(List<String> parentLocationDbIds) {
        this.parentLocationDbIds = parentLocationDbIds;
    }

    public LocationSearchRequest parentLocationNames(List<String> parentLocationNames) {
        this.parentLocationNames = parentLocationNames;
        return this;
    }

    public LocationSearchRequest addParentLocationNamesItem(String parentLocationNamesItem) {
        if (this.parentLocationNames == null) {
            this.parentLocationNames = new ArrayList<String>();
        }
        this.parentLocationNames.add(parentLocationNamesItem);
        return this;
    }

    /**
     * A human readable name for a location &lt;br/&gt; The Parent Location defines the encompassing location that this location belongs to.  For example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields.
     *
     * @return parentLocationNames
     **/
    @Schema(example = "[\"Location Alpha\",\"The Large Hadron Collider\"]", description = "A human readable name for a location <br/> The Parent Location defines the encompassing location that this location belongs to.  For example, an Institution might have multiple Field Stations inside it and each Field Station might have multiple Fields.")
    public List<String> getParentLocationNames() {
        return parentLocationNames;
    }

    public void setParentLocationNames(List<String> parentLocationNames) {
        this.parentLocationNames = parentLocationNames;
    }

    public LocationSearchRequest programDbIds(List<String> programDbIds) {
        this.programDbIds = programDbIds;
        return this;
    }

    public LocationSearchRequest addProgramDbIdsItem(String programDbIdsItem) {
        if (this.programDbIds == null) {
            this.programDbIds = new ArrayList<String>();
        }
        this.programDbIds.add(programDbIdsItem);
        return this;
    }

    /**
     * A BrAPI Program represents the high level organization or group who is responsible for conducting trials and studies. Things like Breeding Programs and Funded Projects are considered BrAPI Programs.   Use this parameter to only return results associated with the given programs.   Use &#x60;GET /programs&#x60; to find the list of available programs on a server.
     *
     * @return programDbIds
     **/
    @Schema(example = "[\"8f5de35b\",\"0e2d4a13\"]", description = "A BrAPI Program represents the high level organization or group who is responsible for conducting trials and studies. Things like Breeding Programs and Funded Projects are considered BrAPI Programs.   Use this parameter to only return results associated with the given programs.   Use `GET /programs` to find the list of available programs on a server.")
    public List<String> getProgramDbIds() {
        return programDbIds;
    }

    public void setProgramDbIds(List<String> programDbIds) {
        this.programDbIds = programDbIds;
    }

    public LocationSearchRequest programNames(List<String> programNames) {
        this.programNames = programNames;
        return this;
    }

    public LocationSearchRequest addProgramNamesItem(String programNamesItem) {
        if (this.programNames == null) {
            this.programNames = new ArrayList<String>();
        }
        this.programNames.add(programNamesItem);
        return this;
    }

    /**
     * Use this parameter to only return results associated with the given program names. Program names are not required to be unique.  Use &#x60;GET /programs&#x60; to find the list of available programs on a server.
     *
     * @return programNames
     **/
    @Schema(example = "[\"Better Breeding Program\",\"Best Breeding Program\"]", description = "Use this parameter to only return results associated with the given program names. Program names are not required to be unique.  Use `GET /programs` to find the list of available programs on a server.")
    public List<String> getProgramNames() {
        return programNames;
    }

    public void setProgramNames(List<String> programNames) {
        this.programNames = programNames;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LocationSearchRequest locationSearchRequest = (LocationSearchRequest) o;
        return Objects.equals(this.abbreviations, locationSearchRequest.abbreviations) &&
                Objects.equals(this.altitudeMax, locationSearchRequest.altitudeMax) &&
                Objects.equals(this.altitudeMin, locationSearchRequest.altitudeMin) &&
                Objects.equals(this.commonCropNames, locationSearchRequest.commonCropNames) &&
                Objects.equals(this.coordinates, locationSearchRequest.coordinates) &&
                Objects.equals(this.countryCodes, locationSearchRequest.countryCodes) &&
                Objects.equals(this.countryNames, locationSearchRequest.countryNames) &&
                Objects.equals(this.externalReferenceIDs, locationSearchRequest.externalReferenceIDs) &&
                Objects.equals(this.externalReferenceIds, locationSearchRequest.externalReferenceIds) &&
                Objects.equals(this.externalReferenceSources, locationSearchRequest.externalReferenceSources) &&
                Objects.equals(this.instituteAddresses, locationSearchRequest.instituteAddresses) &&
                Objects.equals(this.instituteNames, locationSearchRequest.instituteNames) &&
                Objects.equals(this.locationDbIds, locationSearchRequest.locationDbIds) &&
                Objects.equals(this.locationNames, locationSearchRequest.locationNames) &&
                Objects.equals(this.locationTypes, locationSearchRequest.locationTypes) &&
                Objects.equals(this.page, locationSearchRequest.page) &&
                Objects.equals(this.pageSize, locationSearchRequest.pageSize) &&
                Objects.equals(this.parentLocationDbIds, locationSearchRequest.parentLocationDbIds) &&
                Objects.equals(this.parentLocationNames, locationSearchRequest.parentLocationNames) &&
                Objects.equals(this.programDbIds, locationSearchRequest.programDbIds) &&
                Objects.equals(this.programNames, locationSearchRequest.programNames);
    }

    @Override
    public int hashCode() {
        return Objects.hash(abbreviations, altitudeMax, altitudeMin, commonCropNames, coordinates, countryCodes, countryNames, externalReferenceIDs, externalReferenceIds, externalReferenceSources, instituteAddresses, instituteNames, locationDbIds, locationNames, locationTypes, page, pageSize, parentLocationDbIds, parentLocationNames, programDbIds, programNames);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LocationSearchRequest {\n");

        sb.append("    abbreviations: ").append(toIndentedString(abbreviations)).append("\n");
        sb.append("    altitudeMax: ").append(toIndentedString(altitudeMax)).append("\n");
        sb.append("    altitudeMin: ").append(toIndentedString(altitudeMin)).append("\n");
        sb.append("    commonCropNames: ").append(toIndentedString(commonCropNames)).append("\n");
        sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
        sb.append("    countryCodes: ").append(toIndentedString(countryCodes)).append("\n");
        sb.append("    countryNames: ").append(toIndentedString(countryNames)).append("\n");
        sb.append("    externalReferenceIDs: ").append(toIndentedString(externalReferenceIDs)).append("\n");
        sb.append("    externalReferenceIds: ").append(toIndentedString(externalReferenceIds)).append("\n");
        sb.append("    externalReferenceSources: ").append(toIndentedString(externalReferenceSources)).append("\n");
        sb.append("    instituteAddresses: ").append(toIndentedString(instituteAddresses)).append("\n");
        sb.append("    instituteNames: ").append(toIndentedString(instituteNames)).append("\n");
        sb.append("    locationDbIds: ").append(toIndentedString(locationDbIds)).append("\n");
        sb.append("    locationNames: ").append(toIndentedString(locationNames)).append("\n");
        sb.append("    locationTypes: ").append(toIndentedString(locationTypes)).append("\n");
        sb.append("    page: ").append(toIndentedString(page)).append("\n");
        sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
        sb.append("    parentLocationDbIds: ").append(toIndentedString(parentLocationDbIds)).append("\n");
        sb.append("    parentLocationNames: ").append(toIndentedString(parentLocationNames)).append("\n");
        sb.append("    programDbIds: ").append(toIndentedString(programDbIds)).append("\n");
        sb.append("    programNames: ").append(toIndentedString(programNames)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
