/*
 * BrAPI-Core
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.0/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.0\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore20.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.core;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * ListSearchRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:44:03.583Z[GMT]")
public class ListSearchRequest {
    @SerializedName("commonCropNames")
    private List<String> commonCropNames = null;

    @SerializedName("dateCreatedRangeEnd")
    private OffsetDateTime dateCreatedRangeEnd = null;

    @SerializedName("dateCreatedRangeStart")
    private OffsetDateTime dateCreatedRangeStart = null;

    @SerializedName("dateModifiedRangeEnd")
    private OffsetDateTime dateModifiedRangeEnd = null;

    @SerializedName("dateModifiedRangeStart")
    private OffsetDateTime dateModifiedRangeStart = null;

    @SerializedName("externalReferenceIDs")
    private List<String> externalReferenceIDs = null;

    @SerializedName("externalReferenceIds")
    private List<String> externalReferenceIds = null;

    @SerializedName("externalReferenceSources")
    private List<String> externalReferenceSources = null;

    @SerializedName("listDbIds")
    private List<String> listDbIds = null;

    @SerializedName("listNames")
    private List<String> listNames = null;

    @SerializedName("listOwnerNames")
    private List<String> listOwnerNames = null;

    @SerializedName("listOwnerPersonDbIds")
    private List<String> listOwnerPersonDbIds = null;

    @SerializedName("listSources")
    private List<String> listSources = null;

    /**
     * A flag to indicate the type of objects that are referneced in a List
     */
    @JsonAdapter(ListTypeEnum.Adapter.class)
    public enum ListTypeEnum {
        GERMPLASM("germplasm"),
        MARKERS("markers"),
        VARIANTS("variants"),
        PROGRAMS("programs"),
        TRIALS("trials"),
        STUDIES("studies"),
        OBSERVATIONUNITS("observationUnits"),
        OBSERVATIONS("observations"),
        OBSERVATIONVARIABLES("observationVariables"),
        SAMPLES("samples");

        private String value;

        ListTypeEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static ListTypeEnum fromValue(String input) {
            for (ListTypeEnum b : ListTypeEnum.values()) {
                if (b.value.equals(input)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<ListTypeEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final ListTypeEnum enumeration) throws IOException {
                jsonWriter.value(String.valueOf(enumeration.getValue()));
            }

            @Override
            public ListTypeEnum read(final JsonReader jsonReader) throws IOException {
                Object value = jsonReader.nextString();
                return ListTypeEnum.fromValue((String) (value));
            }
        }
    }

    @SerializedName("listType")
    private ListTypeEnum listType = null;

    @SerializedName("page")
    private Integer page = null;

    @SerializedName("pageSize")
    private Integer pageSize = null;

    @SerializedName("programDbIds")
    private List<String> programDbIds = null;

    @SerializedName("programNames")
    private List<String> programNames = null;

    public ListSearchRequest commonCropNames(List<String> commonCropNames) {
        this.commonCropNames = commonCropNames;
        return this;
    }

    public ListSearchRequest addCommonCropNamesItem(String commonCropNamesItem) {
        if (this.commonCropNames == null) {
            this.commonCropNames = new ArrayList<String>();
        }
        this.commonCropNames.add(commonCropNamesItem);
        return this;
    }

    /**
     * The BrAPI Common Crop Name is the simple, generalized, widely accepted name of the organism being researched. It is most often used in multi-crop systems where digital resources need to be divided at a high level. Things like &#x27;Maize&#x27;, &#x27;Wheat&#x27;, and &#x27;Rice&#x27; are examples of common crop names.  Use this parameter to only return results associated with the given crops.   Use &#x60;GET /commoncropnames&#x60; to find the list of available crops on a server.
     *
     * @return commonCropNames
     **/
    @Schema(example = "[\"Tomatillo\",\"Paw Paw\"]", description = "The BrAPI Common Crop Name is the simple, generalized, widely accepted name of the organism being researched. It is most often used in multi-crop systems where digital resources need to be divided at a high level. Things like 'Maize', 'Wheat', and 'Rice' are examples of common crop names.  Use this parameter to only return results associated with the given crops.   Use `GET /commoncropnames` to find the list of available crops on a server.")
    public List<String> getCommonCropNames() {
        return commonCropNames;
    }

    public void setCommonCropNames(List<String> commonCropNames) {
        this.commonCropNames = commonCropNames;
    }

    public ListSearchRequest dateCreatedRangeEnd(OffsetDateTime dateCreatedRangeEnd) {
        this.dateCreatedRangeEnd = dateCreatedRangeEnd;
        return this;
    }

    /**
     * Define the end for an interval of time and only include Lists that are created within this interval.
     *
     * @return dateCreatedRangeEnd
     **/
    @Schema(description = "Define the end for an interval of time and only include Lists that are created within this interval.")
    public OffsetDateTime getDateCreatedRangeEnd() {
        return dateCreatedRangeEnd;
    }

    public void setDateCreatedRangeEnd(OffsetDateTime dateCreatedRangeEnd) {
        this.dateCreatedRangeEnd = dateCreatedRangeEnd;
    }

    public ListSearchRequest dateCreatedRangeStart(OffsetDateTime dateCreatedRangeStart) {
        this.dateCreatedRangeStart = dateCreatedRangeStart;
        return this;
    }

    /**
     * Define the begining for an interval of time and only include Lists that are created within this interval.
     *
     * @return dateCreatedRangeStart
     **/
    @Schema(description = "Define the begining for an interval of time and only include Lists that are created within this interval.")
    public OffsetDateTime getDateCreatedRangeStart() {
        return dateCreatedRangeStart;
    }

    public void setDateCreatedRangeStart(OffsetDateTime dateCreatedRangeStart) {
        this.dateCreatedRangeStart = dateCreatedRangeStart;
    }

    public ListSearchRequest dateModifiedRangeEnd(OffsetDateTime dateModifiedRangeEnd) {
        this.dateModifiedRangeEnd = dateModifiedRangeEnd;
        return this;
    }

    /**
     * Define the end for an interval of time and only include Lists that are modified within this interval.
     *
     * @return dateModifiedRangeEnd
     **/
    @Schema(description = "Define the end for an interval of time and only include Lists that are modified within this interval.")
    public OffsetDateTime getDateModifiedRangeEnd() {
        return dateModifiedRangeEnd;
    }

    public void setDateModifiedRangeEnd(OffsetDateTime dateModifiedRangeEnd) {
        this.dateModifiedRangeEnd = dateModifiedRangeEnd;
    }

    public ListSearchRequest dateModifiedRangeStart(OffsetDateTime dateModifiedRangeStart) {
        this.dateModifiedRangeStart = dateModifiedRangeStart;
        return this;
    }

    /**
     * Define the begining for an interval of time and only include Lists that are modified within this interval.
     *
     * @return dateModifiedRangeStart
     **/
    @Schema(description = "Define the begining for an interval of time and only include Lists that are modified within this interval.")
    public OffsetDateTime getDateModifiedRangeStart() {
        return dateModifiedRangeStart;
    }

    public void setDateModifiedRangeStart(OffsetDateTime dateModifiedRangeStart) {
        this.dateModifiedRangeStart = dateModifiedRangeStart;
    }

    public ListSearchRequest externalReferenceIDs(List<String> externalReferenceIDs) {
        this.externalReferenceIDs = externalReferenceIDs;
        return this;
    }

    public ListSearchRequest addExternalReferenceIDsItem(String externalReferenceIDsItem) {
        if (this.externalReferenceIDs == null) {
            this.externalReferenceIDs = new ArrayList<String>();
        }
        this.externalReferenceIDs.add(externalReferenceIDsItem);
        return this;
    }

    /**
     * **Deprecated in v2.1** Please use &#x60;externalReferenceIds&#x60;. Github issue number #460  &lt;br&gt;List of external reference IDs. Could be a simple strings or a URIs. (use with &#x60;externalReferenceSources&#x60; parameter)
     *
     * @return externalReferenceIDs
     **/
    @Schema(example = "[\"doi:10.155454/12341234\",\"14a19841\"]", description = "**Deprecated in v2.1** Please use `externalReferenceIds`. Github issue number #460  <br>List of external reference IDs. Could be a simple strings or a URIs. (use with `externalReferenceSources` parameter)")
    public List<String> getExternalReferenceIDs() {
        return externalReferenceIDs;
    }

    public void setExternalReferenceIDs(List<String> externalReferenceIDs) {
        this.externalReferenceIDs = externalReferenceIDs;
    }

    public ListSearchRequest externalReferenceIds(List<String> externalReferenceIds) {
        this.externalReferenceIds = externalReferenceIds;
        return this;
    }

    public ListSearchRequest addExternalReferenceIdsItem(String externalReferenceIdsItem) {
        if (this.externalReferenceIds == null) {
            this.externalReferenceIds = new ArrayList<String>();
        }
        this.externalReferenceIds.add(externalReferenceIdsItem);
        return this;
    }

    /**
     * List of external reference IDs. Could be a simple strings or a URIs. (use with &#x60;externalReferenceSources&#x60; parameter)
     *
     * @return externalReferenceIds
     **/
    @Schema(example = "[\"doi:10.155454/12341234\",\"14a19841\"]", description = "List of external reference IDs. Could be a simple strings or a URIs. (use with `externalReferenceSources` parameter)")
    public List<String> getExternalReferenceIds() {
        return externalReferenceIds;
    }

    public void setExternalReferenceIds(List<String> externalReferenceIds) {
        this.externalReferenceIds = externalReferenceIds;
    }

    public ListSearchRequest externalReferenceSources(List<String> externalReferenceSources) {
        this.externalReferenceSources = externalReferenceSources;
        return this;
    }

    public ListSearchRequest addExternalReferenceSourcesItem(String externalReferenceSourcesItem) {
        if (this.externalReferenceSources == null) {
            this.externalReferenceSources = new ArrayList<String>();
        }
        this.externalReferenceSources.add(externalReferenceSourcesItem);
        return this;
    }

    /**
     * List of identifiers for the source system or database of an external reference (use with &#x60;externalReferenceIDs&#x60; parameter)
     *
     * @return externalReferenceSources
     **/
    @Schema(example = "[\"DOI\",\"Field App Name\"]", description = "List of identifiers for the source system or database of an external reference (use with `externalReferenceIDs` parameter)")
    public List<String> getExternalReferenceSources() {
        return externalReferenceSources;
    }

    public void setExternalReferenceSources(List<String> externalReferenceSources) {
        this.externalReferenceSources = externalReferenceSources;
    }

    public ListSearchRequest listDbIds(List<String> listDbIds) {
        this.listDbIds = listDbIds;
        return this;
    }

    public ListSearchRequest addListDbIdsItem(String listDbIdsItem) {
        if (this.listDbIds == null) {
            this.listDbIds = new ArrayList<String>();
        }
        this.listDbIds.add(listDbIdsItem);
        return this;
    }

    /**
     * An array of primary database identifiers to identify a set of Lists
     *
     * @return listDbIds
     **/
    @Schema(example = "[\"55f20cf6\",\"3193ca3d\"]", description = "An array of primary database identifiers to identify a set of Lists")
    public List<String> getListDbIds() {
        return listDbIds;
    }

    public void setListDbIds(List<String> listDbIds) {
        this.listDbIds = listDbIds;
    }

    public ListSearchRequest listNames(List<String> listNames) {
        this.listNames = listNames;
        return this;
    }

    public ListSearchRequest addListNamesItem(String listNamesItem) {
        if (this.listNames == null) {
            this.listNames = new ArrayList<String>();
        }
        this.listNames.add(listNamesItem);
        return this;
    }

    /**
     * An array of human readable names to identify a set of Lists
     *
     * @return listNames
     **/
    @Schema(example = "[\"Planing List 1\",\"Bobs List\"]", description = "An array of human readable names to identify a set of Lists")
    public List<String> getListNames() {
        return listNames;
    }

    public void setListNames(List<String> listNames) {
        this.listNames = listNames;
    }

    public ListSearchRequest listOwnerNames(List<String> listOwnerNames) {
        this.listOwnerNames = listOwnerNames;
        return this;
    }

    public ListSearchRequest addListOwnerNamesItem(String listOwnerNamesItem) {
        if (this.listOwnerNames == null) {
            this.listOwnerNames = new ArrayList<String>();
        }
        this.listOwnerNames.add(listOwnerNamesItem);
        return this;
    }

    /**
     * An array of names for the people or entities who are responsible for a set of Lists
     *
     * @return listOwnerNames
     **/
    @Schema(example = "[\"Bob Robertson\",\"Rob Robertson\"]", description = "An array of names for the people or entities who are responsible for a set of Lists")
    public List<String> getListOwnerNames() {
        return listOwnerNames;
    }

    public void setListOwnerNames(List<String> listOwnerNames) {
        this.listOwnerNames = listOwnerNames;
    }

    public ListSearchRequest listOwnerPersonDbIds(List<String> listOwnerPersonDbIds) {
        this.listOwnerPersonDbIds = listOwnerPersonDbIds;
        return this;
    }

    public ListSearchRequest addListOwnerPersonDbIdsItem(String listOwnerPersonDbIdsItem) {
        if (this.listOwnerPersonDbIds == null) {
            this.listOwnerPersonDbIds = new ArrayList<String>();
        }
        this.listOwnerPersonDbIds.add(listOwnerPersonDbIdsItem);
        return this;
    }

    /**
     * An array of primary database identifiers to identify people or entities who are responsible for a set of Lists
     *
     * @return listOwnerPersonDbIds
     **/
    @Schema(example = "[\"bob@bob.com\",\"rob@bob.com\"]", description = "An array of primary database identifiers to identify people or entities who are responsible for a set of Lists")
    public List<String> getListOwnerPersonDbIds() {
        return listOwnerPersonDbIds;
    }

    public void setListOwnerPersonDbIds(List<String> listOwnerPersonDbIds) {
        this.listOwnerPersonDbIds = listOwnerPersonDbIds;
    }

    public ListSearchRequest listSources(List<String> listSources) {
        this.listSources = listSources;
        return this;
    }

    public ListSearchRequest addListSourcesItem(String listSourcesItem) {
        if (this.listSources == null) {
            this.listSources = new ArrayList<String>();
        }
        this.listSources.add(listSourcesItem);
        return this;
    }

    /**
     * An array of terms identifying lists from different sources (ie &#x27;USER&#x27;, &#x27;SYSTEM&#x27;, etc)
     *
     * @return listSources
     **/
    @Schema(example = "[\"USER\",\"SYSTEM\",\"EXTERNAL\"]", description = "An array of terms identifying lists from different sources (ie 'USER', 'SYSTEM', etc)")
    public List<String> getListSources() {
        return listSources;
    }

    public void setListSources(List<String> listSources) {
        this.listSources = listSources;
    }

    public ListSearchRequest listType(ListTypeEnum listType) {
        this.listType = listType;
        return this;
    }

    /**
     * A flag to indicate the type of objects that are referneced in a List
     *
     * @return listType
     **/
    @Schema(example = "germplasm", description = "A flag to indicate the type of objects that are referneced in a List")
    public ListTypeEnum getListType() {
        return listType;
    }

    public void setListType(ListTypeEnum listType) {
        this.listType = listType;
    }

    public ListSearchRequest page(Integer page) {
        this.page = page;
        return this;
    }

    /**
     * Which result page is requested. The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;.
     *
     * @return page
     **/
    @Schema(example = "0", description = "Which result page is requested. The page indexing starts at 0 (the first page is 'page'= 0). Default is `0`.")
    public Integer getPage() {
        return page;
    }

    public void setPage(Integer page) {
        this.page = page;
    }

    public ListSearchRequest pageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }

    /**
     * The size of the pages to be returned. Default is &#x60;1000&#x60;.
     *
     * @return pageSize
     **/
    @Schema(example = "1000", description = "The size of the pages to be returned. Default is `1000`.")
    public Integer getPageSize() {
        return pageSize;
    }

    public void setPageSize(Integer pageSize) {
        this.pageSize = pageSize;
    }

    public ListSearchRequest programDbIds(List<String> programDbIds) {
        this.programDbIds = programDbIds;
        return this;
    }

    public ListSearchRequest addProgramDbIdsItem(String programDbIdsItem) {
        if (this.programDbIds == null) {
            this.programDbIds = new ArrayList<String>();
        }
        this.programDbIds.add(programDbIdsItem);
        return this;
    }

    /**
     * A BrAPI Program represents the high level organization or group who is responsible for conducting trials and studies. Things like Breeding Programs and Funded Projects are considered BrAPI Programs.   Use this parameter to only return results associated with the given programs.   Use &#x60;GET /programs&#x60; to find the list of available programs on a server.
     *
     * @return programDbIds
     **/
    @Schema(example = "[\"8f5de35b\",\"0e2d4a13\"]", description = "A BrAPI Program represents the high level organization or group who is responsible for conducting trials and studies. Things like Breeding Programs and Funded Projects are considered BrAPI Programs.   Use this parameter to only return results associated with the given programs.   Use `GET /programs` to find the list of available programs on a server.")
    public List<String> getProgramDbIds() {
        return programDbIds;
    }

    public void setProgramDbIds(List<String> programDbIds) {
        this.programDbIds = programDbIds;
    }

    public ListSearchRequest programNames(List<String> programNames) {
        this.programNames = programNames;
        return this;
    }

    public ListSearchRequest addProgramNamesItem(String programNamesItem) {
        if (this.programNames == null) {
            this.programNames = new ArrayList<String>();
        }
        this.programNames.add(programNamesItem);
        return this;
    }

    /**
     * Use this parameter to only return results associated with the given program names. Program names are not required to be unique.  Use &#x60;GET /programs&#x60; to find the list of available programs on a server.
     *
     * @return programNames
     **/
    @Schema(example = "[\"Better Breeding Program\",\"Best Breeding Program\"]", description = "Use this parameter to only return results associated with the given program names. Program names are not required to be unique.  Use `GET /programs` to find the list of available programs on a server.")
    public List<String> getProgramNames() {
        return programNames;
    }

    public void setProgramNames(List<String> programNames) {
        this.programNames = programNames;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ListSearchRequest listSearchRequest = (ListSearchRequest) o;
        return Objects.equals(this.commonCropNames, listSearchRequest.commonCropNames) &&
                Objects.equals(this.dateCreatedRangeEnd, listSearchRequest.dateCreatedRangeEnd) &&
                Objects.equals(this.dateCreatedRangeStart, listSearchRequest.dateCreatedRangeStart) &&
                Objects.equals(this.dateModifiedRangeEnd, listSearchRequest.dateModifiedRangeEnd) &&
                Objects.equals(this.dateModifiedRangeStart, listSearchRequest.dateModifiedRangeStart) &&
                Objects.equals(this.externalReferenceIDs, listSearchRequest.externalReferenceIDs) &&
                Objects.equals(this.externalReferenceIds, listSearchRequest.externalReferenceIds) &&
                Objects.equals(this.externalReferenceSources, listSearchRequest.externalReferenceSources) &&
                Objects.equals(this.listDbIds, listSearchRequest.listDbIds) &&
                Objects.equals(this.listNames, listSearchRequest.listNames) &&
                Objects.equals(this.listOwnerNames, listSearchRequest.listOwnerNames) &&
                Objects.equals(this.listOwnerPersonDbIds, listSearchRequest.listOwnerPersonDbIds) &&
                Objects.equals(this.listSources, listSearchRequest.listSources) &&
                Objects.equals(this.listType, listSearchRequest.listType) &&
                Objects.equals(this.page, listSearchRequest.page) &&
                Objects.equals(this.pageSize, listSearchRequest.pageSize) &&
                Objects.equals(this.programDbIds, listSearchRequest.programDbIds) &&
                Objects.equals(this.programNames, listSearchRequest.programNames);
    }

    @Override
    public int hashCode() {
        return Objects.hash(commonCropNames, dateCreatedRangeEnd, dateCreatedRangeStart, dateModifiedRangeEnd, dateModifiedRangeStart, externalReferenceIDs, externalReferenceIds, externalReferenceSources, listDbIds, listNames, listOwnerNames, listOwnerPersonDbIds, listSources, listType, page, pageSize, programDbIds, programNames);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ListSearchRequest {\n");

        sb.append("    commonCropNames: ").append(toIndentedString(commonCropNames)).append("\n");
        sb.append("    dateCreatedRangeEnd: ").append(toIndentedString(dateCreatedRangeEnd)).append("\n");
        sb.append("    dateCreatedRangeStart: ").append(toIndentedString(dateCreatedRangeStart)).append("\n");
        sb.append("    dateModifiedRangeEnd: ").append(toIndentedString(dateModifiedRangeEnd)).append("\n");
        sb.append("    dateModifiedRangeStart: ").append(toIndentedString(dateModifiedRangeStart)).append("\n");
        sb.append("    externalReferenceIDs: ").append(toIndentedString(externalReferenceIDs)).append("\n");
        sb.append("    externalReferenceIds: ").append(toIndentedString(externalReferenceIds)).append("\n");
        sb.append("    externalReferenceSources: ").append(toIndentedString(externalReferenceSources)).append("\n");
        sb.append("    listDbIds: ").append(toIndentedString(listDbIds)).append("\n");
        sb.append("    listNames: ").append(toIndentedString(listNames)).append("\n");
        sb.append("    listOwnerNames: ").append(toIndentedString(listOwnerNames)).append("\n");
        sb.append("    listOwnerPersonDbIds: ").append(toIndentedString(listOwnerPersonDbIds)).append("\n");
        sb.append("    listSources: ").append(toIndentedString(listSources)).append("\n");
        sb.append("    listType: ").append(toIndentedString(listType)).append("\n");
        sb.append("    page: ").append(toIndentedString(page)).append("\n");
        sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
        sb.append("    programDbIds: ").append(toIndentedString(programDbIds)).append("\n");
        sb.append("    programNames: ").append(toIndentedString(programNames)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
