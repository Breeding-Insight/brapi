/*
 * BrAPI-Germplasm
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.germplasm;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PedigreeNodeDEP
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:45:22.672Z[GMT]")
public class PedigreeNodeDEP {
    @SerializedName("crossingProjectDbId")
    private String crossingProjectDbId = null;

    @SerializedName("crossingYear")
    private Integer crossingYear = null;

    @SerializedName("familyCode")
    private String familyCode = null;

    @SerializedName("germplasmDbId")
    private String germplasmDbId = null;

    @SerializedName("germplasmName")
    private String germplasmName = null;

    @SerializedName("parents")
    private List<PedigreeNodeDEPParents> parents = null;

    @SerializedName("pedigree")
    private String pedigree = null;

    @SerializedName("siblings")
    private List<PedigreeNodeDEPSiblings> siblings = null;

    public PedigreeNodeDEP crossingProjectDbId(String crossingProjectDbId) {
        this.crossingProjectDbId = crossingProjectDbId;
        return this;
    }

    /**
     * The crossing project used to generate this germplasm
     *
     * @return crossingProjectDbId
     **/
    @Schema(example = "625e745a", description = "The crossing project used to generate this germplasm")
    public String getCrossingProjectDbId() {
        return crossingProjectDbId;
    }

    public void setCrossingProjectDbId(String crossingProjectDbId) {
        this.crossingProjectDbId = crossingProjectDbId;
    }

    public PedigreeNodeDEP crossingYear(Integer crossingYear) {
        this.crossingYear = crossingYear;
        return this;
    }

    /**
     * The year the parents were originally crossed
     *
     * @return crossingYear
     **/
    @Schema(example = "2005", description = "The year the parents were originally crossed")
    public Integer getCrossingYear() {
        return crossingYear;
    }

    public void setCrossingYear(Integer crossingYear) {
        this.crossingYear = crossingYear;
    }

    public PedigreeNodeDEP familyCode(String familyCode) {
        this.familyCode = familyCode;
        return this;
    }

    /**
     * The code representing the family
     *
     * @return familyCode
     **/
    @Schema(example = "F0000203", description = "The code representing the family")
    public String getFamilyCode() {
        return familyCode;
    }

    public void setFamilyCode(String familyCode) {
        this.familyCode = familyCode;
    }

    public PedigreeNodeDEP germplasmDbId(String germplasmDbId) {
        this.germplasmDbId = germplasmDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies a germplasm
     *
     * @return germplasmDbId
     **/
    @Schema(example = "1098ebaf", required = true, description = "The ID which uniquely identifies a germplasm")
    public String getGermplasmDbId() {
        return germplasmDbId;
    }

    public void setGermplasmDbId(String germplasmDbId) {
        this.germplasmDbId = germplasmDbId;
    }

    public PedigreeNodeDEP germplasmName(String germplasmName) {
        this.germplasmName = germplasmName;
        return this;
    }

    /**
     * A human readable name for a germplasm
     *
     * @return germplasmName
     **/
    @Schema(example = "A0021004", description = "A human readable name for a germplasm")
    public String getGermplasmName() {
        return germplasmName;
    }

    public void setGermplasmName(String germplasmName) {
        this.germplasmName = germplasmName;
    }

    public PedigreeNodeDEP parents(List<PedigreeNodeDEPParents> parents) {
        this.parents = parents;
        return this;
    }

    public PedigreeNodeDEP addParentsItem(PedigreeNodeDEPParents parentsItem) {
        if (this.parents == null) {
            this.parents = new ArrayList<PedigreeNodeDEPParents>();
        }
        this.parents.add(parentsItem);
        return this;
    }

    /**
     * List of parent nodes in the pedigree tree.
     *
     * @return parents
     **/
    @Schema(example = "[{\"germplasmDbId\":\"b66958de\",\"germplasmName\":\"A0000592\",\"parentType\":\"MALE\"},{\"germplasmDbId\":\"a55847ed\",\"germplasmName\":\"A0000592\",\"parentType\":\"FEMALE\"}]", description = "List of parent nodes in the pedigree tree.")
    public List<PedigreeNodeDEPParents> getParents() {
        return parents;
    }

    public void setParents(List<PedigreeNodeDEPParents> parents) {
        this.parents = parents;
    }

    public PedigreeNodeDEP pedigree(String pedigree) {
        this.pedigree = pedigree;
        return this;
    }

    /**
     * The string representation of the pedigree in PURDY notation.
     *
     * @return pedigree
     **/
    @Schema(example = "A0000001/A0000002", description = "The string representation of the pedigree in PURDY notation.")
    public String getPedigree() {
        return pedigree;
    }

    public void setPedigree(String pedigree) {
        this.pedigree = pedigree;
    }

    public PedigreeNodeDEP siblings(List<PedigreeNodeDEPSiblings> siblings) {
        this.siblings = siblings;
        return this;
    }

    public PedigreeNodeDEP addSiblingsItem(PedigreeNodeDEPSiblings siblingsItem) {
        if (this.siblings == null) {
            this.siblings = new ArrayList<PedigreeNodeDEPSiblings>();
        }
        this.siblings.add(siblingsItem);
        return this;
    }

    /**
     * List of sibling germplasm
     *
     * @return siblings
     **/
    @Schema(example = "[{\"germplasmDbId\":\"334f53a3\",\"germplasmName\":\"A0021005\"},{\"germplasmDbId\":\"7bbbda8c\",\"germplasmName\":\"A0021006\"},{\"germplasmDbId\":\"ab1d9b26\",\"germplasmName\":\"A0021007\"}]", description = "List of sibling germplasm")
    public List<PedigreeNodeDEPSiblings> getSiblings() {
        return siblings;
    }

    public void setSiblings(List<PedigreeNodeDEPSiblings> siblings) {
        this.siblings = siblings;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PedigreeNodeDEP pedigreeNodeDEP = (PedigreeNodeDEP) o;
        return Objects.equals(this.crossingProjectDbId, pedigreeNodeDEP.crossingProjectDbId) &&
                Objects.equals(this.crossingYear, pedigreeNodeDEP.crossingYear) &&
                Objects.equals(this.familyCode, pedigreeNodeDEP.familyCode) &&
                Objects.equals(this.germplasmDbId, pedigreeNodeDEP.germplasmDbId) &&
                Objects.equals(this.germplasmName, pedigreeNodeDEP.germplasmName) &&
                Objects.equals(this.parents, pedigreeNodeDEP.parents) &&
                Objects.equals(this.pedigree, pedigreeNodeDEP.pedigree) &&
                Objects.equals(this.siblings, pedigreeNodeDEP.siblings);
    }

    @Override
    public int hashCode() {
        return Objects.hash(crossingProjectDbId, crossingYear, familyCode, germplasmDbId, germplasmName, parents, pedigree, siblings);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class PedigreeNodeDEP {\n");

        sb.append("    crossingProjectDbId: ").append(toIndentedString(crossingProjectDbId)).append("\n");
        sb.append("    crossingYear: ").append(toIndentedString(crossingYear)).append("\n");
        sb.append("    familyCode: ").append(toIndentedString(familyCode)).append("\n");
        sb.append("    germplasmDbId: ").append(toIndentedString(germplasmDbId)).append("\n");
        sb.append("    germplasmName: ").append(toIndentedString(germplasmName)).append("\n");
        sb.append("    parents: ").append(toIndentedString(parents)).append("\n");
        sb.append("    pedigree: ").append(toIndentedString(pedigree)).append("\n");
        sb.append("    siblings: ").append(toIndentedString(siblings)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
