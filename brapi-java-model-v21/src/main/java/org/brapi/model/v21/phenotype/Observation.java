/*
 * BrAPI-Phenotyping
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.phenotype;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.util.*;

/**
 * Observation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:44:48.481Z[GMT]")
public class Observation {
    @SerializedName("additionalInfo")
    private Map<String, String> additionalInfo = null;

    @SerializedName("collector")
    private String collector = null;

    @SerializedName("externalReferences")
    private List<ExternalReferencesInner> externalReferences = null;

    @SerializedName("geoCoordinates")
    private GeoJSON geoCoordinates = null;

    @SerializedName("germplasmDbId")
    private String germplasmDbId = null;

    @SerializedName("germplasmName")
    private String germplasmName = null;

    @SerializedName("observationDbId")
    private String observationDbId = null;

    @SerializedName("observationTimeStamp")
    private OffsetDateTime observationTimeStamp = null;

    @SerializedName("observationUnitDbId")
    private String observationUnitDbId = null;

    @SerializedName("observationUnitName")
    private String observationUnitName = null;

    @SerializedName("observationVariableDbId")
    private String observationVariableDbId = null;

    @SerializedName("observationVariableName")
    private String observationVariableName = null;

    @SerializedName("season")
    private ObservationSeason season = null;

    @SerializedName("studyDbId")
    private String studyDbId = null;

    @SerializedName("uploadedBy")
    private String uploadedBy = null;

    @SerializedName("value")
    private String value = null;

    public Observation additionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }

    public Observation putAdditionalInfoItem(String key, String additionalInfoItem) {
        if (this.additionalInfo == null) {
            this.additionalInfo = new HashMap<String, String>();
        }
        this.additionalInfo.put(key, additionalInfoItem);
        return this;
    }

    /**
     * A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.
     *
     * @return additionalInfo
     **/
    @Schema(description = "A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.")
    public Map<String, String> getAdditionalInfo() {
        return additionalInfo;
    }

    public void setAdditionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
    }

    public Observation collector(String collector) {
        this.collector = collector;
        return this;
    }

    /**
     * The name or identifier of the entity which collected the observation
     *
     * @return collector
     **/
    @Schema(example = "917d3ae0", description = "The name or identifier of the entity which collected the observation")
    public String getCollector() {
        return collector;
    }

    public void setCollector(String collector) {
        this.collector = collector;
    }

    public Observation externalReferences(List<ExternalReferencesInner> externalReferences) {
        this.externalReferences = externalReferences;
        return this;
    }

    public Observation addExternalReferencesItem(ExternalReferencesInner externalReferencesItem) {
        if (this.externalReferences == null) {
            this.externalReferences = new ArrayList<ExternalReferencesInner>();
        }
        this.externalReferences.add(externalReferencesItem);
        return this;
    }

    /**
     * An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.
     *
     * @return externalReferences
     **/
    @Schema(example = "[{\"referenceId\":\"doi:10.155454/12341234\",\"referenceSource\":\"DOI\"},{\"referenceId\":\"75a50e76\",\"referenceSource\":\"Remote Data Collection Upload Tool\"}]", description = "An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.")
    public List<ExternalReferencesInner> getExternalReferences() {
        return externalReferences;
    }

    public void setExternalReferences(List<ExternalReferencesInner> externalReferences) {
        this.externalReferences = externalReferences;
    }

    public Observation geoCoordinates(GeoJSON geoCoordinates) {
        this.geoCoordinates = geoCoordinates;
        return this;
    }

    /**
     * Get geoCoordinates
     *
     * @return geoCoordinates
     **/
    @Schema(description = "")
    public GeoJSON getGeoCoordinates() {
        return geoCoordinates;
    }

    public void setGeoCoordinates(GeoJSON geoCoordinates) {
        this.geoCoordinates = geoCoordinates;
    }

    public Observation germplasmDbId(String germplasmDbId) {
        this.germplasmDbId = germplasmDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies a germplasm
     *
     * @return germplasmDbId
     **/
    @Schema(example = "2408ab11", description = "The ID which uniquely identifies a germplasm")
    public String getGermplasmDbId() {
        return germplasmDbId;
    }

    public void setGermplasmDbId(String germplasmDbId) {
        this.germplasmDbId = germplasmDbId;
    }

    public Observation germplasmName(String germplasmName) {
        this.germplasmName = germplasmName;
        return this;
    }

    /**
     * Name of the germplasm. It can be the preferred name and does not have to be unique.
     *
     * @return germplasmName
     **/
    @Schema(example = "A0000003", description = "Name of the germplasm. It can be the preferred name and does not have to be unique.")
    public String getGermplasmName() {
        return germplasmName;
    }

    public void setGermplasmName(String germplasmName) {
        this.germplasmName = germplasmName;
    }

    public Observation observationDbId(String observationDbId) {
        this.observationDbId = observationDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies an observation
     *
     * @return observationDbId
     **/
    @Schema(example = "ef24b615", description = "The ID which uniquely identifies an observation")
    public String getObservationDbId() {
        return observationDbId;
    }

    public void setObservationDbId(String observationDbId) {
        this.observationDbId = observationDbId;
    }

    public Observation observationTimeStamp(OffsetDateTime observationTimeStamp) {
        this.observationTimeStamp = observationTimeStamp;
        return this;
    }

    /**
     * The date and time when this observation was made
     *
     * @return observationTimeStamp
     **/
    @Schema(description = "The date and time when this observation was made")
    public OffsetDateTime getObservationTimeStamp() {
        return observationTimeStamp;
    }

    public void setObservationTimeStamp(OffsetDateTime observationTimeStamp) {
        this.observationTimeStamp = observationTimeStamp;
    }

    public Observation observationUnitDbId(String observationUnitDbId) {
        this.observationUnitDbId = observationUnitDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies an observation unit
     *
     * @return observationUnitDbId
     **/
    @Schema(example = "598111d4", description = "The ID which uniquely identifies an observation unit")
    public String getObservationUnitDbId() {
        return observationUnitDbId;
    }

    public void setObservationUnitDbId(String observationUnitDbId) {
        this.observationUnitDbId = observationUnitDbId;
    }

    public Observation observationUnitName(String observationUnitName) {
        this.observationUnitName = observationUnitName;
        return this;
    }

    /**
     * A human readable name for an observation unit
     *
     * @return observationUnitName
     **/
    @Schema(example = "Plot 1", description = "A human readable name for an observation unit")
    public String getObservationUnitName() {
        return observationUnitName;
    }

    public void setObservationUnitName(String observationUnitName) {
        this.observationUnitName = observationUnitName;
    }

    public Observation observationVariableDbId(String observationVariableDbId) {
        this.observationVariableDbId = observationVariableDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies an observation variable
     *
     * @return observationVariableDbId
     **/
    @Schema(example = "c403d107", description = "The ID which uniquely identifies an observation variable")
    public String getObservationVariableDbId() {
        return observationVariableDbId;
    }

    public void setObservationVariableDbId(String observationVariableDbId) {
        this.observationVariableDbId = observationVariableDbId;
    }

    public Observation observationVariableName(String observationVariableName) {
        this.observationVariableName = observationVariableName;
        return this;
    }

    /**
     * A human readable name for an observation variable
     *
     * @return observationVariableName
     **/
    @Schema(example = "Plant Height in meters", description = "A human readable name for an observation variable")
    public String getObservationVariableName() {
        return observationVariableName;
    }

    public void setObservationVariableName(String observationVariableName) {
        this.observationVariableName = observationVariableName;
    }

    public Observation season(ObservationSeason season) {
        this.season = season;
        return this;
    }

    /**
     * Get season
     *
     * @return season
     **/
    @Schema(description = "")
    public ObservationSeason getSeason() {
        return season;
    }

    public void setSeason(ObservationSeason season) {
        this.season = season;
    }

    public Observation studyDbId(String studyDbId) {
        this.studyDbId = studyDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies a study within the given database server
     *
     * @return studyDbId
     **/
    @Schema(example = "ef2829db", description = "The ID which uniquely identifies a study within the given database server")
    public String getStudyDbId() {
        return studyDbId;
    }

    public void setStudyDbId(String studyDbId) {
        this.studyDbId = studyDbId;
    }

    public Observation uploadedBy(String uploadedBy) {
        this.uploadedBy = uploadedBy;
        return this;
    }

    /**
     * The name or id of the user who uploaded the observation to the database system
     *
     * @return uploadedBy
     **/
    @Schema(example = "a2f7f60b", description = "The name or id of the user who uploaded the observation to the database system")
    public String getUploadedBy() {
        return uploadedBy;
    }

    public void setUploadedBy(String uploadedBy) {
        this.uploadedBy = uploadedBy;
    }

    public Observation value(String value) {
        this.value = value;
        return this;
    }

    /**
     * The value of the data collected as an observation
     *
     * @return value
     **/
    @Schema(example = "2.3", description = "The value of the data collected as an observation")
    public String getValue() {
        return value;
    }

    public void setValue(String value) {
        this.value = value;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Observation observation = (Observation) o;
        return Objects.equals(this.additionalInfo, observation.additionalInfo) &&
                Objects.equals(this.collector, observation.collector) &&
                Objects.equals(this.externalReferences, observation.externalReferences) &&
                Objects.equals(this.geoCoordinates, observation.geoCoordinates) &&
                Objects.equals(this.germplasmDbId, observation.germplasmDbId) &&
                Objects.equals(this.germplasmName, observation.germplasmName) &&
                Objects.equals(this.observationDbId, observation.observationDbId) &&
                Objects.equals(this.observationTimeStamp, observation.observationTimeStamp) &&
                Objects.equals(this.observationUnitDbId, observation.observationUnitDbId) &&
                Objects.equals(this.observationUnitName, observation.observationUnitName) &&
                Objects.equals(this.observationVariableDbId, observation.observationVariableDbId) &&
                Objects.equals(this.observationVariableName, observation.observationVariableName) &&
                Objects.equals(this.season, observation.season) &&
                Objects.equals(this.studyDbId, observation.studyDbId) &&
                Objects.equals(this.uploadedBy, observation.uploadedBy) &&
                Objects.equals(this.value, observation.value);
    }

    @Override
    public int hashCode() {
        return Objects.hash(additionalInfo, collector, externalReferences, geoCoordinates, germplasmDbId, germplasmName, observationDbId, observationTimeStamp, observationUnitDbId, observationUnitName, observationVariableDbId, observationVariableName, season, studyDbId, uploadedBy, value);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Observation {\n");

        sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
        sb.append("    collector: ").append(toIndentedString(collector)).append("\n");
        sb.append("    externalReferences: ").append(toIndentedString(externalReferences)).append("\n");
        sb.append("    geoCoordinates: ").append(toIndentedString(geoCoordinates)).append("\n");
        sb.append("    germplasmDbId: ").append(toIndentedString(germplasmDbId)).append("\n");
        sb.append("    germplasmName: ").append(toIndentedString(germplasmName)).append("\n");
        sb.append("    observationDbId: ").append(toIndentedString(observationDbId)).append("\n");
        sb.append("    observationTimeStamp: ").append(toIndentedString(observationTimeStamp)).append("\n");
        sb.append("    observationUnitDbId: ").append(toIndentedString(observationUnitDbId)).append("\n");
        sb.append("    observationUnitName: ").append(toIndentedString(observationUnitName)).append("\n");
        sb.append("    observationVariableDbId: ").append(toIndentedString(observationVariableDbId)).append("\n");
        sb.append("    observationVariableName: ").append(toIndentedString(observationVariableName)).append("\n");
        sb.append("    season: ").append(toIndentedString(season)).append("\n");
        sb.append("    studyDbId: ").append(toIndentedString(studyDbId)).append("\n");
        sb.append("    uploadedBy: ").append(toIndentedString(uploadedBy)).append("\n");
        sb.append("    value: ").append(toIndentedString(value)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
