/*
 * BrAPI-Germplasm
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.germplasm;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Information about the collection of a germplasm
 */
@Schema(description = "Information about the collection of a germplasm")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:45:22.672Z[GMT]")
public class GermplasmMCPDCollectingInfo {
    @SerializedName("collectingDate")
    private LocalDate collectingDate = null;

    @SerializedName("collectingInstitutes")
    private List<GermplasmMCPDCollectingInfoCollectingInstitutes> collectingInstitutes = null;

    @SerializedName("collectingMissionIdentifier")
    private String collectingMissionIdentifier = null;

    @SerializedName("collectingNumber")
    private String collectingNumber = null;

    @SerializedName("collectingSite")
    private GermplasmMCPDCollectingInfoCollectingSite collectingSite = null;

    public GermplasmMCPDCollectingInfo collectingDate(LocalDate collectingDate) {
        this.collectingDate = collectingDate;
        return this;
    }

    /**
     * MCPD (v2.1) (COLLDATE) 17. Collecting date of the sample [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \&quot;00\&quot; [double zero].
     *
     * @return collectingDate
     **/
    @Schema(description = "MCPD (v2.1) (COLLDATE) 17. Collecting date of the sample [YYYYMMDD] where YYYY is the year, MM is the month and DD is the day. Missing data (MM or DD) should be indicated with hyphens or \"00\" [double zero].")
    public LocalDate getCollectingDate() {
        return collectingDate;
    }

    public void setCollectingDate(LocalDate collectingDate) {
        this.collectingDate = collectingDate;
    }

    public GermplasmMCPDCollectingInfo collectingInstitutes(List<GermplasmMCPDCollectingInfoCollectingInstitutes> collectingInstitutes) {
        this.collectingInstitutes = collectingInstitutes;
        return this;
    }

    public GermplasmMCPDCollectingInfo addCollectingInstitutesItem(GermplasmMCPDCollectingInfoCollectingInstitutes collectingInstitutesItem) {
        if (this.collectingInstitutes == null) {
            this.collectingInstitutes = new ArrayList<GermplasmMCPDCollectingInfoCollectingInstitutes>();
        }
        this.collectingInstitutes.add(collectingInstitutesItem);
        return this;
    }

    /**
     * Institutes which collected the sample
     *
     * @return collectingInstitutes
     **/
    @Schema(description = "Institutes which collected the sample")
    public List<GermplasmMCPDCollectingInfoCollectingInstitutes> getCollectingInstitutes() {
        return collectingInstitutes;
    }

    public void setCollectingInstitutes(List<GermplasmMCPDCollectingInfoCollectingInstitutes> collectingInstitutes) {
        this.collectingInstitutes = collectingInstitutes;
    }

    public GermplasmMCPDCollectingInfo collectingMissionIdentifier(String collectingMissionIdentifier) {
        this.collectingMissionIdentifier = collectingMissionIdentifier;
        return this;
    }

    /**
     * MCPD (v2.1) (COLLMISSID) 4.2 Identifier of the collecting mission used by the Collecting Institute (4 or 4.1) (e.g. \&quot;CIATFOR_052\&quot;, \&quot;CN_426\&quot;).
     *
     * @return collectingMissionIdentifier
     **/
    @Schema(example = "CIATFOR_052", description = "MCPD (v2.1) (COLLMISSID) 4.2 Identifier of the collecting mission used by the Collecting Institute (4 or 4.1) (e.g. \"CIATFOR_052\", \"CN_426\").")
    public String getCollectingMissionIdentifier() {
        return collectingMissionIdentifier;
    }

    public void setCollectingMissionIdentifier(String collectingMissionIdentifier) {
        this.collectingMissionIdentifier = collectingMissionIdentifier;
    }

    public GermplasmMCPDCollectingInfo collectingNumber(String collectingNumber) {
        this.collectingNumber = collectingNumber;
        return this;
    }

    /**
     * MCPD (v2.1) (COLLNUMB) 3. Original identifier assigned by the collector(s) of the sample, normally composed of the name or initials of the collector(s) followed by a number (e.g. \&quot;ab109909\&quot;). This identifier is essential for identifying duplicates held in different collections.
     *
     * @return collectingNumber
     **/
    @Schema(example = "ab109909", description = "MCPD (v2.1) (COLLNUMB) 3. Original identifier assigned by the collector(s) of the sample, normally composed of the name or initials of the collector(s) followed by a number (e.g. \"ab109909\"). This identifier is essential for identifying duplicates held in different collections.")
    public String getCollectingNumber() {
        return collectingNumber;
    }

    public void setCollectingNumber(String collectingNumber) {
        this.collectingNumber = collectingNumber;
    }

    public GermplasmMCPDCollectingInfo collectingSite(GermplasmMCPDCollectingInfoCollectingSite collectingSite) {
        this.collectingSite = collectingSite;
        return this;
    }

    /**
     * Get collectingSite
     *
     * @return collectingSite
     **/
    @Schema(description = "")
    public GermplasmMCPDCollectingInfoCollectingSite getCollectingSite() {
        return collectingSite;
    }

    public void setCollectingSite(GermplasmMCPDCollectingInfoCollectingSite collectingSite) {
        this.collectingSite = collectingSite;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GermplasmMCPDCollectingInfo germplasmMCPDCollectingInfo = (GermplasmMCPDCollectingInfo) o;
        return Objects.equals(this.collectingDate, germplasmMCPDCollectingInfo.collectingDate) &&
                Objects.equals(this.collectingInstitutes, germplasmMCPDCollectingInfo.collectingInstitutes) &&
                Objects.equals(this.collectingMissionIdentifier, germplasmMCPDCollectingInfo.collectingMissionIdentifier) &&
                Objects.equals(this.collectingNumber, germplasmMCPDCollectingInfo.collectingNumber) &&
                Objects.equals(this.collectingSite, germplasmMCPDCollectingInfo.collectingSite);
    }

    @Override
    public int hashCode() {
        return Objects.hash(collectingDate, collectingInstitutes, collectingMissionIdentifier, collectingNumber, collectingSite);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class GermplasmMCPDCollectingInfo {\n");

        sb.append("    collectingDate: ").append(toIndentedString(collectingDate)).append("\n");
        sb.append("    collectingInstitutes: ").append(toIndentedString(collectingInstitutes)).append("\n");
        sb.append("    collectingMissionIdentifier: ").append(toIndentedString(collectingMissionIdentifier)).append("\n");
        sb.append("    collectingNumber: ").append(toIndentedString(collectingNumber)).append("\n");
        sb.append("    collectingSite: ").append(toIndentedString(collectingSite)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
