/*
 * BrAPI-Germplasm
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.germplasm;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;

import java.math.BigDecimal;
import java.util.*;

/**
 * SeedLotTransaction
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:45:22.672Z[GMT]")
public class SeedLotTransaction {
    @SerializedName("additionalInfo")
    private Map<String, String> additionalInfo = null;

    @SerializedName("amount")
    private BigDecimal amount = null;

    @SerializedName("externalReferences")
    private List<CrossExternalReferences> externalReferences = null;

    @SerializedName("fromSeedLotDbId")
    private String fromSeedLotDbId = null;

    @SerializedName("toSeedLotDbId")
    private String toSeedLotDbId = null;

    @SerializedName("transactionDbId")
    private String transactionDbId = null;

    @SerializedName("transactionDescription")
    private String transactionDescription = null;

    @SerializedName("transactionTimestamp")
    private OffsetDateTime transactionTimestamp = null;

    @SerializedName("units")
    private String units = null;

    public SeedLotTransaction additionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }

    public SeedLotTransaction putAdditionalInfoItem(String key, String additionalInfoItem) {
        if (this.additionalInfo == null) {
            this.additionalInfo = new HashMap<String, String>();
        }
        this.additionalInfo.put(key, additionalInfoItem);
        return this;
    }

    /**
     * A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.
     *
     * @return additionalInfo
     **/
    @Schema(description = "A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.")
    public Map<String, String> getAdditionalInfo() {
        return additionalInfo;
    }

    public void setAdditionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
    }

    public SeedLotTransaction amount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    /**
     * The number of units being transfered between SeedLots. Could be a count (seeds, bulbs, etc) or a weight (kg of seed).
     *
     * @return amount
     **/
    @Schema(example = "45", description = "The number of units being transfered between SeedLots. Could be a count (seeds, bulbs, etc) or a weight (kg of seed).")
    public BigDecimal getAmount() {
        return amount;
    }

    public void setAmount(BigDecimal amount) {
        this.amount = amount;
    }

    public SeedLotTransaction externalReferences(List<CrossExternalReferences> externalReferences) {
        this.externalReferences = externalReferences;
        return this;
    }

    public SeedLotTransaction addExternalReferencesItem(CrossExternalReferences externalReferencesItem) {
        if (this.externalReferences == null) {
            this.externalReferences = new ArrayList<CrossExternalReferences>();
        }
        this.externalReferences.add(externalReferencesItem);
        return this;
    }

    /**
     * An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.
     *
     * @return externalReferences
     **/
    @Schema(example = "[{\"referenceId\":\"doi:10.155454/12341234\",\"referenceSource\":\"DOI\"},{\"referenceId\":\"75a50e76\",\"referenceSource\":\"Remote Data Collection Upload Tool\"}]", description = "An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.")
    public List<CrossExternalReferences> getExternalReferences() {
        return externalReferences;
    }

    public void setExternalReferences(List<CrossExternalReferences> externalReferences) {
        this.externalReferences = externalReferences;
    }

    public SeedLotTransaction fromSeedLotDbId(String fromSeedLotDbId) {
        this.fromSeedLotDbId = fromSeedLotDbId;
        return this;
    }

    /**
     * The identifier for the Seed Lot being transfered out of
     *
     * @return fromSeedLotDbId
     **/
    @Schema(example = "11eef13b", description = "The identifier for the Seed Lot being transfered out of")
    public String getFromSeedLotDbId() {
        return fromSeedLotDbId;
    }

    public void setFromSeedLotDbId(String fromSeedLotDbId) {
        this.fromSeedLotDbId = fromSeedLotDbId;
    }

    public SeedLotTransaction toSeedLotDbId(String toSeedLotDbId) {
        this.toSeedLotDbId = toSeedLotDbId;
        return this;
    }

    /**
     * The identifier for the Seed Lot being transfered into
     *
     * @return toSeedLotDbId
     **/
    @Schema(example = "59339b90", description = "The identifier for the Seed Lot being transfered into")
    public String getToSeedLotDbId() {
        return toSeedLotDbId;
    }

    public void setToSeedLotDbId(String toSeedLotDbId) {
        this.toSeedLotDbId = toSeedLotDbId;
    }

    public SeedLotTransaction transactionDbId(String transactionDbId) {
        this.transactionDbId = transactionDbId;
        return this;
    }

    /**
     * Unique DbId for the Seed Lot Transaction
     *
     * @return transactionDbId
     **/
    @Schema(example = "28e46db9", description = "Unique DbId for the Seed Lot Transaction")
    public String getTransactionDbId() {
        return transactionDbId;
    }

    public void setTransactionDbId(String transactionDbId) {
        this.transactionDbId = transactionDbId;
    }

    public SeedLotTransaction transactionDescription(String transactionDescription) {
        this.transactionDescription = transactionDescription;
        return this;
    }

    /**
     * A general description of this Seed Lot Transaction
     *
     * @return transactionDescription
     **/
    @Schema(example = "f9cd88d2", description = "A general description of this Seed Lot Transaction")
    public String getTransactionDescription() {
        return transactionDescription;
    }

    public void setTransactionDescription(String transactionDescription) {
        this.transactionDescription = transactionDescription;
    }

    public SeedLotTransaction transactionTimestamp(OffsetDateTime transactionTimestamp) {
        this.transactionTimestamp = transactionTimestamp;
        return this;
    }

    /**
     * The time stamp for when the transaction occurred
     *
     * @return transactionTimestamp
     **/
    @Schema(description = "The time stamp for when the transaction occurred")
    public OffsetDateTime getTransactionTimestamp() {
        return transactionTimestamp;
    }

    public void setTransactionTimestamp(OffsetDateTime transactionTimestamp) {
        this.transactionTimestamp = transactionTimestamp;
    }

    public SeedLotTransaction units(String units) {
        this.units = units;
        return this;
    }

    /**
     * A description of the things being transfered between SeedLots in a transaction (seeds, bulbs, kg, etc)
     *
     * @return units
     **/
    @Schema(example = "seeds", description = "A description of the things being transfered between SeedLots in a transaction (seeds, bulbs, kg, etc)")
    public String getUnits() {
        return units;
    }

    public void setUnits(String units) {
        this.units = units;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SeedLotTransaction seedLotTransaction = (SeedLotTransaction) o;
        return Objects.equals(this.additionalInfo, seedLotTransaction.additionalInfo) &&
                Objects.equals(this.amount, seedLotTransaction.amount) &&
                Objects.equals(this.externalReferences, seedLotTransaction.externalReferences) &&
                Objects.equals(this.fromSeedLotDbId, seedLotTransaction.fromSeedLotDbId) &&
                Objects.equals(this.toSeedLotDbId, seedLotTransaction.toSeedLotDbId) &&
                Objects.equals(this.transactionDbId, seedLotTransaction.transactionDbId) &&
                Objects.equals(this.transactionDescription, seedLotTransaction.transactionDescription) &&
                Objects.equals(this.transactionTimestamp, seedLotTransaction.transactionTimestamp) &&
                Objects.equals(this.units, seedLotTransaction.units);
    }

    @Override
    public int hashCode() {
        return Objects.hash(additionalInfo, amount, externalReferences, fromSeedLotDbId, toSeedLotDbId, transactionDbId, transactionDescription, transactionTimestamp, units);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SeedLotTransaction {\n");

        sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
        sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
        sb.append("    externalReferences: ").append(toIndentedString(externalReferences)).append("\n");
        sb.append("    fromSeedLotDbId: ").append(toIndentedString(fromSeedLotDbId)).append("\n");
        sb.append("    toSeedLotDbId: ").append(toIndentedString(toSeedLotDbId)).append("\n");
        sb.append("    transactionDbId: ").append(toIndentedString(transactionDbId)).append("\n");
        sb.append("    transactionDescription: ").append(toIndentedString(transactionDescription)).append("\n");
        sb.append("    transactionTimestamp: ").append(toIndentedString(transactionTimestamp)).append("\n");
        sb.append("    units: ").append(toIndentedString(units)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
