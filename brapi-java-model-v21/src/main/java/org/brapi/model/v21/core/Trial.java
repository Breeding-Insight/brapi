/*
 * BrAPI-Core
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.0/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.0\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore20.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.core;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;

import java.util.*;

/**
 * Trial
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T17:44:03.583Z[GMT]")
public class Trial {
    @SerializedName("active")
    private Boolean active = null;

    @SerializedName("additionalInfo")
    private Map<String, String> additionalInfo = null;

    @SerializedName("commonCropName")
    private String commonCropName = null;

    @SerializedName("contacts")
    private List<StudyContacts> contacts = null;

    @SerializedName("datasetAuthorships")
    private List<TrialDatasetAuthorships> datasetAuthorships = null;

    @SerializedName("documentationURL")
    private String documentationURL = null;

    @SerializedName("endDate")
    private LocalDate endDate = null;

    @SerializedName("externalReferences")
    private List<ExternalReferencesInner> externalReferences = null;

    @SerializedName("programDbId")
    private String programDbId = null;

    @SerializedName("programName")
    private String programName = null;

    @SerializedName("publications")
    private List<TrialPublications> publications = null;

    @SerializedName("startDate")
    private LocalDate startDate = null;

    @SerializedName("trialDbId")
    private String trialDbId = null;

    @SerializedName("trialDescription")
    private String trialDescription = null;

    @SerializedName("trialName")
    private String trialName = null;

    @SerializedName("trialPUI")
    private String trialPUI = null;

    public Trial active(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * A flag to indicate if a Trial is currently active and ongoing
     *
     * @return active
     **/
    @Schema(example = "true", description = "A flag to indicate if a Trial is currently active and ongoing")
    public Boolean isActive() {
        return active;
    }

    public void setActive(Boolean active) {
        this.active = active;
    }

    public Trial additionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }

    public Trial putAdditionalInfoItem(String key, String additionalInfoItem) {
        if (this.additionalInfo == null) {
            this.additionalInfo = new HashMap<String, String>();
        }
        this.additionalInfo.put(key, additionalInfoItem);
        return this;
    }

    /**
     * A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.
     *
     * @return additionalInfo
     **/
    @Schema(description = "A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.")
    public Map<String, String> getAdditionalInfo() {
        return additionalInfo;
    }

    public void setAdditionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
    }

    public Trial commonCropName(String commonCropName) {
        this.commonCropName = commonCropName;
        return this;
    }

    /**
     * Common name for the crop associated with this trial
     *
     * @return commonCropName
     **/
    @Schema(example = "Wheat", description = "Common name for the crop associated with this trial")
    public String getCommonCropName() {
        return commonCropName;
    }

    public void setCommonCropName(String commonCropName) {
        this.commonCropName = commonCropName;
    }

    public Trial contacts(List<StudyContacts> contacts) {
        this.contacts = contacts;
        return this;
    }

    public Trial addContactsItem(StudyContacts contactsItem) {
        if (this.contacts == null) {
            this.contacts = new ArrayList<StudyContacts>();
        }
        this.contacts.add(contactsItem);
        return this;
    }

    /**
     * List of contact entities associated with this trial
     *
     * @return contacts
     **/
    @Schema(description = "List of contact entities associated with this trial")
    public List<StudyContacts> getContacts() {
        return contacts;
    }

    public void setContacts(List<StudyContacts> contacts) {
        this.contacts = contacts;
    }

    public Trial datasetAuthorships(List<TrialDatasetAuthorships> datasetAuthorships) {
        this.datasetAuthorships = datasetAuthorships;
        return this;
    }

    public Trial addDatasetAuthorshipsItem(TrialDatasetAuthorships datasetAuthorshipsItem) {
        if (this.datasetAuthorships == null) {
            this.datasetAuthorships = new ArrayList<TrialDatasetAuthorships>();
        }
        this.datasetAuthorships.add(datasetAuthorshipsItem);
        return this;
    }

    /**
     * License and citation information for the data in this trial
     *
     * @return datasetAuthorships
     **/
    @Schema(description = "License and citation information for the data in this trial")
    public List<TrialDatasetAuthorships> getDatasetAuthorships() {
        return datasetAuthorships;
    }

    public void setDatasetAuthorships(List<TrialDatasetAuthorships> datasetAuthorships) {
        this.datasetAuthorships = datasetAuthorships;
    }

    public Trial documentationURL(String documentationURL) {
        this.documentationURL = documentationURL;
        return this;
    }

    /**
     * A URL to the human readable documentation of an object
     *
     * @return documentationURL
     **/
    @Schema(example = "https://wiki.brapi.org", description = "A URL to the human readable documentation of an object")
    public String getDocumentationURL() {
        return documentationURL;
    }

    public void setDocumentationURL(String documentationURL) {
        this.documentationURL = documentationURL;
    }

    public Trial endDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }

    /**
     * The date this trial ends
     *
     * @return endDate
     **/
    @Schema(description = "The date this trial ends")
    public LocalDate getEndDate() {
        return endDate;
    }

    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    public Trial externalReferences(List<ExternalReferencesInner> externalReferences) {
        this.externalReferences = externalReferences;
        return this;
    }

    public Trial addExternalReferencesItem(ExternalReferencesInner externalReferencesItem) {
        if (this.externalReferences == null) {
            this.externalReferences = new ArrayList<ExternalReferencesInner>();
        }
        this.externalReferences.add(externalReferencesItem);
        return this;
    }

    /**
     * An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.
     *
     * @return externalReferences
     **/
    @Schema(example = "[{\"referenceId\":\"doi:10.155454/12341234\",\"referenceSource\":\"DOI\"},{\"referenceId\":\"75a50e76\",\"referenceSource\":\"Remote Data Collection Upload Tool\"}]", description = "An array of external reference ids. These are references to this piece of data in an external system. Could be a simple string or a URI.")
    public List<ExternalReferencesInner> getExternalReferences() {
        return externalReferences;
    }

    public void setExternalReferences(List<ExternalReferencesInner> externalReferences) {
        this.externalReferences = externalReferences;
    }

    public Trial programDbId(String programDbId) {
        this.programDbId = programDbId;
        return this;
    }

    /**
     * A program identifier to search for
     *
     * @return programDbId
     **/
    @Schema(example = "673f378a", description = "A program identifier to search for")
    public String getProgramDbId() {
        return programDbId;
    }

    public void setProgramDbId(String programDbId) {
        this.programDbId = programDbId;
    }

    public Trial programName(String programName) {
        this.programName = programName;
        return this;
    }

    /**
     * Human readable name of the program
     *
     * @return programName
     **/
    @Schema(example = "Tomatillo_Breeding_Program", description = "Human readable name of the program")
    public String getProgramName() {
        return programName;
    }

    public void setProgramName(String programName) {
        this.programName = programName;
    }

    public Trial publications(List<TrialPublications> publications) {
        this.publications = publications;
        return this;
    }

    public Trial addPublicationsItem(TrialPublications publicationsItem) {
        if (this.publications == null) {
            this.publications = new ArrayList<TrialPublications>();
        }
        this.publications.add(publicationsItem);
        return this;
    }

    /**
     * MIAPPE V1.1 (DM-9) Associated publication - An identifier for a literature publication where the investigation is described. Use of DOIs is recommended.
     *
     * @return publications
     **/
    @Schema(description = "MIAPPE V1.1 (DM-9) Associated publication - An identifier for a literature publication where the investigation is described. Use of DOIs is recommended.")
    public List<TrialPublications> getPublications() {
        return publications;
    }

    public void setPublications(List<TrialPublications> publications) {
        this.publications = publications;
    }

    public Trial startDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }

    /**
     * The date this trial started
     *
     * @return startDate
     **/
    @Schema(description = "The date this trial started")
    public LocalDate getStartDate() {
        return startDate;
    }

    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    public Trial trialDbId(String trialDbId) {
        this.trialDbId = trialDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies a trial  MIAPPE V1.1 (DM-2) Investigation unique ID - Identifier comprising the unique name of the institution/database hosting the submission of the investigation data, and the accession number of the investigation in that institution.
     *
     * @return trialDbId
     **/
    @Schema(example = "1883b402", description = "The ID which uniquely identifies a trial  MIAPPE V1.1 (DM-2) Investigation unique ID - Identifier comprising the unique name of the institution/database hosting the submission of the investigation data, and the accession number of the investigation in that institution.")
    public String getTrialDbId() {
        return trialDbId;
    }

    public void setTrialDbId(String trialDbId) {
        this.trialDbId = trialDbId;
    }

    public Trial trialDescription(String trialDescription) {
        this.trialDescription = trialDescription;
        return this;
    }

    /**
     * The human readable description of a trial  MIAPPE V1.1 (DM-4) Investigation description - Human-readable text describing the investigation in more detail.
     *
     * @return trialDescription
     **/
    @Schema(example = "General drought resistance trial initiated in Peru before duplication in Africa", description = "The human readable description of a trial  MIAPPE V1.1 (DM-4) Investigation description - Human-readable text describing the investigation in more detail.")
    public String getTrialDescription() {
        return trialDescription;
    }

    public void setTrialDescription(String trialDescription) {
        this.trialDescription = trialDescription;
    }

    public Trial trialName(String trialName) {
        this.trialName = trialName;
        return this;
    }

    /**
     * The human readable name of a trial  MIAPPE V1.1 (DM-3) Investigation title - Human-readable string summarising the investigation.
     *
     * @return trialName
     **/
    @Schema(example = "Peru Yield Trial 1", description = "The human readable name of a trial  MIAPPE V1.1 (DM-3) Investigation title - Human-readable string summarising the investigation.")
    public String getTrialName() {
        return trialName;
    }

    public void setTrialName(String trialName) {
        this.trialName = trialName;
    }

    public Trial trialPUI(String trialPUI) {
        this.trialPUI = trialPUI;
        return this;
    }

    /**
     * A permanent identifier for a trial. Could be DOI or other URI formatted identifier.
     *
     * @return trialPUI
     **/
    @Schema(example = "https://doi.org/101093190", description = "A permanent identifier for a trial. Could be DOI or other URI formatted identifier.")
    public String getTrialPUI() {
        return trialPUI;
    }

    public void setTrialPUI(String trialPUI) {
        this.trialPUI = trialPUI;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Trial trial = (Trial) o;
        return Objects.equals(this.active, trial.active) &&
                Objects.equals(this.additionalInfo, trial.additionalInfo) &&
                Objects.equals(this.commonCropName, trial.commonCropName) &&
                Objects.equals(this.contacts, trial.contacts) &&
                Objects.equals(this.datasetAuthorships, trial.datasetAuthorships) &&
                Objects.equals(this.documentationURL, trial.documentationURL) &&
                Objects.equals(this.endDate, trial.endDate) &&
                Objects.equals(this.externalReferences, trial.externalReferences) &&
                Objects.equals(this.programDbId, trial.programDbId) &&
                Objects.equals(this.programName, trial.programName) &&
                Objects.equals(this.publications, trial.publications) &&
                Objects.equals(this.startDate, trial.startDate) &&
                Objects.equals(this.trialDbId, trial.trialDbId) &&
                Objects.equals(this.trialDescription, trial.trialDescription) &&
                Objects.equals(this.trialName, trial.trialName) &&
                Objects.equals(this.trialPUI, trial.trialPUI);
    }

    @Override
    public int hashCode() {
        return Objects.hash(active, additionalInfo, commonCropName, contacts, datasetAuthorships, documentationURL, endDate, externalReferences, programDbId, programName, publications, startDate, trialDbId, trialDescription, trialName, trialPUI);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Trial {\n");

        sb.append("    active: ").append(toIndentedString(active)).append("\n");
        sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
        sb.append("    commonCropName: ").append(toIndentedString(commonCropName)).append("\n");
        sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
        sb.append("    datasetAuthorships: ").append(toIndentedString(datasetAuthorships)).append("\n");
        sb.append("    documentationURL: ").append(toIndentedString(documentationURL)).append("\n");
        sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
        sb.append("    externalReferences: ").append(toIndentedString(externalReferences)).append("\n");
        sb.append("    programDbId: ").append(toIndentedString(programDbId)).append("\n");
        sb.append("    programName: ").append(toIndentedString(programName)).append("\n");
        sb.append("    publications: ").append(toIndentedString(publications)).append("\n");
        sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
        sb.append("    trialDbId: ").append(toIndentedString(trialDbId)).append("\n");
        sb.append("    trialDescription: ").append(toIndentedString(trialDescription)).append("\n");
        sb.append("    trialName: ").append(toIndentedString(trialName)).append("\n");
        sb.append("    trialPUI: ").append(toIndentedString(trialPUI)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
