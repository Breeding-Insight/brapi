/*
 * BrAPI-Genotyping
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.genotype;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.*;

/**
 * A &#x60;Reference&#x60; is a canonical assembled contig, intended to act as a reference coordinate space for other genomic annotations. A single &#x60;Reference&#x60; might represent the human chromosome 1, for instance. &#x60;References&#x60; are designed to be immutable.
 */
@Schema(description = "A `Reference` is a canonical assembled contig, intended to act as a reference coordinate space for other genomic annotations. A single `Reference` might represent the human chromosome 1, for instance. `References` are designed to be immutable.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T14:54:00.515Z[GMT]")
public class Reference {
    @SerializedName("additionalInfo")
    private Map<String, String> additionalInfo = null;

    @SerializedName("commonCropName")
    private String commonCropName = null;

    @SerializedName("externalReferences")
    private ExternalReferences externalReferences = null;

    @SerializedName("isDerived")
    private Boolean isDerived = null;

    @SerializedName("length")
    private Integer length = null;

    @SerializedName("md5checksum")
    private String md5checksum = null;

    @SerializedName("referenceDbId")
    private String referenceDbId = null;

    @SerializedName("referenceName")
    private String referenceName = null;

    @SerializedName("referenceSetDbId")
    private String referenceSetDbId = null;

    @SerializedName("referenceSetName")
    private String referenceSetName = null;

    @SerializedName("sourceAccessions")
    private List<String> sourceAccessions = null;

    @SerializedName("sourceDivergence")
    private Float sourceDivergence = null;

    @SerializedName("sourceGermplasm")
    private List<ReferenceSourceGermplasm> sourceGermplasm = null;

    @SerializedName("sourceURI")
    private String sourceURI = null;

    @SerializedName("species")
    private OntologyTerm species = null;

    public Reference additionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }

    public Reference putAdditionalInfoItem(String key, String additionalInfoItem) {
        if (this.additionalInfo == null) {
            this.additionalInfo = new HashMap<String, String>();
        }
        this.additionalInfo.put(key, additionalInfoItem);
        return this;
    }

    /**
     * A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.
     *
     * @return additionalInfo
     **/
    @Schema(description = "A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.")
    public Map<String, String> getAdditionalInfo() {
        return additionalInfo;
    }

    public void setAdditionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
    }

    public Reference commonCropName(String commonCropName) {
        this.commonCropName = commonCropName;
        return this;
    }

    /**
     * Common name for the crop
     *
     * @return commonCropName
     **/
    @Schema(example = "Maize", description = "Common name for the crop")
    public String getCommonCropName() {
        return commonCropName;
    }

    public void setCommonCropName(String commonCropName) {
        this.commonCropName = commonCropName;
    }

    public Reference externalReferences(ExternalReferences externalReferences) {
        this.externalReferences = externalReferences;
        return this;
    }

    /**
     * Get externalReferences
     *
     * @return externalReferences
     **/
    @Schema(description = "")
    public ExternalReferences getExternalReferences() {
        return externalReferences;
    }

    public void setExternalReferences(ExternalReferences externalReferences) {
        this.externalReferences = externalReferences;
    }

    public Reference isDerived(Boolean isDerived) {
        this.isDerived = isDerived;
        return this;
    }

    /**
     * A sequence X is said to be derived from source sequence Y, if X and Y are of the same length and the per-base sequence divergence at A/C/G/T bases is sufficiently small. Two sequences derived from the same official sequence share the same coordinates and annotations, and can be replaced with the official sequence for certain use cases.
     *
     * @return isDerived
     **/
    @Schema(example = "false", description = "A sequence X is said to be derived from source sequence Y, if X and Y are of the same length and the per-base sequence divergence at A/C/G/T bases is sufficiently small. Two sequences derived from the same official sequence share the same coordinates and annotations, and can be replaced with the official sequence for certain use cases.")
    public Boolean isIsDerived() {
        return isDerived;
    }

    public void setIsDerived(Boolean isDerived) {
        this.isDerived = isDerived;
    }

    public Reference length(Integer length) {
        this.length = length;
        return this;
    }

    /**
     * The length of this &#x60;Reference&#x60; sequence.
     *
     * @return length
     **/
    @Schema(example = "50000000", description = "The length of this `Reference` sequence.")
    public Integer getLength() {
        return length;
    }

    public void setLength(Integer length) {
        this.length = length;
    }

    public Reference md5checksum(String md5checksum) {
        this.md5checksum = md5checksum;
        return this;
    }

    /**
     * The MD5 checksum uniquely representing this &#x60;Reference&#x60; as a lower-case hexadecimal string, calculated as the MD5 of the upper-case sequence excluding all whitespace characters (this is equivalent to SQ:M5 in SAM).
     *
     * @return md5checksum
     **/
    @Schema(example = "c2365e900c81a89cf74d83dab60df146", description = "The MD5 checksum uniquely representing this `Reference` as a lower-case hexadecimal string, calculated as the MD5 of the upper-case sequence excluding all whitespace characters (this is equivalent to SQ:M5 in SAM).")
    public String getMd5checksum() {
        return md5checksum;
    }

    public void setMd5checksum(String md5checksum) {
        this.md5checksum = md5checksum;
    }

    public Reference referenceDbId(String referenceDbId) {
        this.referenceDbId = referenceDbId;
        return this;
    }

    /**
     * The unique identifier for a &#x60;Reference&#x60;
     *
     * @return referenceDbId
     **/
    @Schema(example = "fc0a81d0", description = "The unique identifier for a `Reference`")
    public String getReferenceDbId() {
        return referenceDbId;
    }

    public void setReferenceDbId(String referenceDbId) {
        this.referenceDbId = referenceDbId;
    }

    public Reference referenceName(String referenceName) {
        this.referenceName = referenceName;
        return this;
    }

    /**
     * The human readable name of a &#x60;Reference&#x60; within a &#x60;ReferenceSet&#x60;.
     *
     * @return referenceName
     **/
    @Schema(example = "Chromosome 2", description = "The human readable name of a `Reference` within a `ReferenceSet`.")
    public String getReferenceName() {
        return referenceName;
    }

    public void setReferenceName(String referenceName) {
        this.referenceName = referenceName;
    }

    public Reference referenceSetDbId(String referenceSetDbId) {
        this.referenceSetDbId = referenceSetDbId;
        return this;
    }

    /**
     * The unique identifier for a &#x60;ReferenceSet&#x60;
     *
     * @return referenceSetDbId
     **/
    @Schema(example = "c1ecfef1", description = "The unique identifier for a `ReferenceSet`")
    public String getReferenceSetDbId() {
        return referenceSetDbId;
    }

    public void setReferenceSetDbId(String referenceSetDbId) {
        this.referenceSetDbId = referenceSetDbId;
    }

    public Reference referenceSetName(String referenceSetName) {
        this.referenceSetName = referenceSetName;
        return this;
    }

    /**
     * The human readable name of a &#x60;ReferenceSet&#x60;
     *
     * @return referenceSetName
     **/
    @Schema(example = "The Best Assembly Ever", description = "The human readable name of a `ReferenceSet`")
    public String getReferenceSetName() {
        return referenceSetName;
    }

    public void setReferenceSetName(String referenceSetName) {
        this.referenceSetName = referenceSetName;
    }

    public Reference sourceAccessions(List<String> sourceAccessions) {
        this.sourceAccessions = sourceAccessions;
        return this;
    }

    public Reference addSourceAccessionsItem(String sourceAccessionsItem) {
        if (this.sourceAccessions == null) {
            this.sourceAccessions = new ArrayList<String>();
        }
        this.sourceAccessions.add(sourceAccessionsItem);
        return this;
    }

    /**
     * All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) which must include a version number, e.g. &#x60;GCF_000001405.26&#x60;.
     *
     * @return sourceAccessions
     **/
    @Schema(example = "[\"GCF_000001405.26\"]", description = "All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) which must include a version number, e.g. `GCF_000001405.26`.")
    public List<String> getSourceAccessions() {
        return sourceAccessions;
    }

    public void setSourceAccessions(List<String> sourceAccessions) {
        this.sourceAccessions = sourceAccessions;
    }

    public Reference sourceDivergence(Float sourceDivergence) {
        this.sourceDivergence = sourceDivergence;
        return this;
    }

    /**
     * The &#x60;sourceDivergence&#x60; is the fraction of non-indel bases that do not match the &#x60;Reference&#x60; this message was derived from.
     *
     * @return sourceDivergence
     **/
    @Schema(example = "0.01", description = "The `sourceDivergence` is the fraction of non-indel bases that do not match the `Reference` this message was derived from.")
    public Float getSourceDivergence() {
        return sourceDivergence;
    }

    public void setSourceDivergence(Float sourceDivergence) {
        this.sourceDivergence = sourceDivergence;
    }

    public Reference sourceGermplasm(List<ReferenceSourceGermplasm> sourceGermplasm) {
        this.sourceGermplasm = sourceGermplasm;
        return this;
    }

    public Reference addSourceGermplasmItem(ReferenceSourceGermplasm sourceGermplasmItem) {
        if (this.sourceGermplasm == null) {
            this.sourceGermplasm = new ArrayList<ReferenceSourceGermplasm>();
        }
        this.sourceGermplasm.add(sourceGermplasmItem);
        return this;
    }

    /**
     * All known corresponding Germplasm
     *
     * @return sourceGermplasm
     **/
    @Schema(description = "All known corresponding Germplasm")
    public List<ReferenceSourceGermplasm> getSourceGermplasm() {
        return sourceGermplasm;
    }

    public void setSourceGermplasm(List<ReferenceSourceGermplasm> sourceGermplasm) {
        this.sourceGermplasm = sourceGermplasm;
    }

    public Reference sourceURI(String sourceURI) {
        this.sourceURI = sourceURI;
        return this;
    }

    /**
     * The URI from which the sequence was obtained. Specifies a FASTA format file/string with one name, sequence pair. In most cases, clients should call the &#x60;getReferenceBases()&#x60; method to obtain sequence bases for a &#x60;Reference&#x60; instead of attempting to retrieve this URI.
     *
     * @return sourceURI
     **/
    @Schema(example = "https://wiki.brapi.org/files/demo.fast", description = "The URI from which the sequence was obtained. Specifies a FASTA format file/string with one name, sequence pair. In most cases, clients should call the `getReferenceBases()` method to obtain sequence bases for a `Reference` instead of attempting to retrieve this URI.")
    public String getSourceURI() {
        return sourceURI;
    }

    public void setSourceURI(String sourceURI) {
        this.sourceURI = sourceURI;
    }

    public Reference species(OntologyTerm species) {
        this.species = species;
        return this;
    }

    /**
     * Get species
     *
     * @return species
     **/
    @Schema(description = "")
    public OntologyTerm getSpecies() {
        return species;
    }

    public void setSpecies(OntologyTerm species) {
        this.species = species;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Reference reference = (Reference) o;
        return Objects.equals(this.additionalInfo, reference.additionalInfo) &&
                Objects.equals(this.commonCropName, reference.commonCropName) &&
                Objects.equals(this.externalReferences, reference.externalReferences) &&
                Objects.equals(this.isDerived, reference.isDerived) &&
                Objects.equals(this.length, reference.length) &&
                Objects.equals(this.md5checksum, reference.md5checksum) &&
                Objects.equals(this.referenceDbId, reference.referenceDbId) &&
                Objects.equals(this.referenceName, reference.referenceName) &&
                Objects.equals(this.referenceSetDbId, reference.referenceSetDbId) &&
                Objects.equals(this.referenceSetName, reference.referenceSetName) &&
                Objects.equals(this.sourceAccessions, reference.sourceAccessions) &&
                Objects.equals(this.sourceDivergence, reference.sourceDivergence) &&
                Objects.equals(this.sourceGermplasm, reference.sourceGermplasm) &&
                Objects.equals(this.sourceURI, reference.sourceURI) &&
                Objects.equals(this.species, reference.species);
    }

    @Override
    public int hashCode() {
        return Objects.hash(additionalInfo, commonCropName, externalReferences, isDerived, length, md5checksum, referenceDbId, referenceName, referenceSetDbId, referenceSetName, sourceAccessions, sourceDivergence, sourceGermplasm, sourceURI, species);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Reference {\n");

        sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
        sb.append("    commonCropName: ").append(toIndentedString(commonCropName)).append("\n");
        sb.append("    externalReferences: ").append(toIndentedString(externalReferences)).append("\n");
        sb.append("    isDerived: ").append(toIndentedString(isDerived)).append("\n");
        sb.append("    length: ").append(toIndentedString(length)).append("\n");
        sb.append("    md5checksum: ").append(toIndentedString(md5checksum)).append("\n");
        sb.append("    referenceDbId: ").append(toIndentedString(referenceDbId)).append("\n");
        sb.append("    referenceName: ").append(toIndentedString(referenceName)).append("\n");
        sb.append("    referenceSetDbId: ").append(toIndentedString(referenceSetDbId)).append("\n");
        sb.append("    referenceSetName: ").append(toIndentedString(referenceSetName)).append("\n");
        sb.append("    sourceAccessions: ").append(toIndentedString(sourceAccessions)).append("\n");
        sb.append("    sourceDivergence: ").append(toIndentedString(sourceDivergence)).append("\n");
        sb.append("    sourceGermplasm: ").append(toIndentedString(sourceGermplasm)).append("\n");
        sb.append("    sourceURI: ").append(toIndentedString(sourceURI)).append("\n");
        sb.append("    species: ").append(toIndentedString(species)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
