/*
 * BrAPI-Genotyping
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.model.v21.genotype;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * MarkerPosition
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-25T14:54:00.515Z[GMT]")
public class MarkerPosition {
    @SerializedName("additionalInfo")
    private Map<String, String> additionalInfo = null;

    @SerializedName("linkageGroupName")
    private String linkageGroupName = null;

    @SerializedName("mapDbId")
    private String mapDbId = null;

    @SerializedName("mapName")
    private String mapName = null;

    @SerializedName("position")
    private Integer position = null;

    @SerializedName("variantDbId")
    private String variantDbId = null;

    @SerializedName("variantName")
    private String variantName = null;

    public MarkerPosition additionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }

    public MarkerPosition putAdditionalInfoItem(String key, String additionalInfoItem) {
        if (this.additionalInfo == null) {
            this.additionalInfo = new HashMap<String, String>();
        }
        this.additionalInfo.put(key, additionalInfoItem);
        return this;
    }

    /**
     * A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.
     *
     * @return additionalInfo
     **/
    @Schema(description = "A free space containing any additional information related to a particular object. A data source may provide any JSON object, unrestriced by the BrAPI specification.")
    public Map<String, String> getAdditionalInfo() {
        return additionalInfo;
    }

    public void setAdditionalInfo(Map<String, String> additionalInfo) {
        this.additionalInfo = additionalInfo;
    }

    public MarkerPosition linkageGroupName(String linkageGroupName) {
        this.linkageGroupName = linkageGroupName;
        return this;
    }

    /**
     * The Uniquely Identifiable name of a &#x60;LinkageGroup&#x60; &lt;br&gt; This might be a chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.
     *
     * @return linkageGroupName
     **/
    @Schema(example = "Chromosome 3", description = "The Uniquely Identifiable name of a `LinkageGroup` <br> This might be a chromosome identifier or the generic linkage group identifier if the chromosome is not applicable.")
    public String getLinkageGroupName() {
        return linkageGroupName;
    }

    public void setLinkageGroupName(String linkageGroupName) {
        this.linkageGroupName = linkageGroupName;
    }

    public MarkerPosition mapDbId(String mapDbId) {
        this.mapDbId = mapDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies a &#x60;GenomeMap&#x60;
     *
     * @return mapDbId
     **/
    @Schema(example = "3d52bdf3", description = "The ID which uniquely identifies a `GenomeMap`")
    public String getMapDbId() {
        return mapDbId;
    }

    public void setMapDbId(String mapDbId) {
        this.mapDbId = mapDbId;
    }

    public MarkerPosition mapName(String mapName) {
        this.mapName = mapName;
        return this;
    }

    /**
     * A human readable name for a &#x60;GenomeMap&#x60;
     *
     * @return mapName
     **/
    @Schema(example = "Genome Map 1", description = "A human readable name for a `GenomeMap`")
    public String getMapName() {
        return mapName;
    }

    public void setMapName(String mapName) {
        this.mapName = mapName;
    }

    public MarkerPosition position(Integer position) {
        this.position = position;
        return this;
    }

    /**
     * The position of a marker or variant within a &#x60;LinkageGroup&#x60;
     *
     * @return position
     **/
    @Schema(example = "2390", description = "The position of a marker or variant within a `LinkageGroup`")
    public Integer getPosition() {
        return position;
    }

    public void setPosition(Integer position) {
        this.position = position;
    }

    public MarkerPosition variantDbId(String variantDbId) {
        this.variantDbId = variantDbId;
        return this;
    }

    /**
     * The ID which uniquely identifies a &#x60;Variant&#x60; within the given database server &lt;br&gt; A &#x60;Variant&#x60; can also represent a Marker
     *
     * @return variantDbId
     **/
    @Schema(example = "a1eb250a", description = "The ID which uniquely identifies a `Variant` within the given database server <br> A `Variant` can also represent a Marker ")
    public String getVariantDbId() {
        return variantDbId;
    }

    public void setVariantDbId(String variantDbId) {
        this.variantDbId = variantDbId;
    }

    public MarkerPosition variantName(String variantName) {
        this.variantName = variantName;
        return this;
    }

    /**
     * The human readable name for a &#x60;Variant&#x60; &lt;br&gt; A &#x60;Variant&#x60; can also represent a Marker
     *
     * @return variantName
     **/
    @Schema(example = "Marker_2390", description = "The human readable name for a `Variant` <br> A `Variant` can also represent a Marker ")
    public String getVariantName() {
        return variantName;
    }

    public void setVariantName(String variantName) {
        this.variantName = variantName;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MarkerPosition markerPosition = (MarkerPosition) o;
        return Objects.equals(this.additionalInfo, markerPosition.additionalInfo) &&
                Objects.equals(this.linkageGroupName, markerPosition.linkageGroupName) &&
                Objects.equals(this.mapDbId, markerPosition.mapDbId) &&
                Objects.equals(this.mapName, markerPosition.mapName) &&
                Objects.equals(this.position, markerPosition.position) &&
                Objects.equals(this.variantDbId, markerPosition.variantDbId) &&
                Objects.equals(this.variantName, markerPosition.variantName);
    }

    @Override
    public int hashCode() {
        return Objects.hash(additionalInfo, linkageGroupName, mapDbId, mapName, position, variantDbId, variantName);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MarkerPosition {\n");

        sb.append("    additionalInfo: ").append(toIndentedString(additionalInfo)).append("\n");
        sb.append("    linkageGroupName: ").append(toIndentedString(linkageGroupName)).append("\n");
        sb.append("    mapDbId: ").append(toIndentedString(mapDbId)).append("\n");
        sb.append("    mapName: ").append(toIndentedString(mapName)).append("\n");
        sb.append("    position: ").append(toIndentedString(position)).append("\n");
        sb.append("    variantDbId: ").append(toIndentedString(variantDbId)).append("\n");
        sb.append("    variantName: ").append(toIndentedString(variantName)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
