/*
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.client.model.ProgenyProgeny;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * Progeny
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-08-25T02:56:46.257Z[GMT]")
public class Progeny {
  @SerializedName("defaultDisplayName")
  private String defaultDisplayName = null;

  @SerializedName("germplasmDbId")
  private String germplasmDbId = null;

  @SerializedName("progeny")
  private List<ProgenyProgeny> progeny = null;

  public Progeny defaultDisplayName(String defaultDisplayName) {
    this.defaultDisplayName = defaultDisplayName;
    return this;
  }

   /**
   * A human readable name for a germplasm
   * @return defaultDisplayName
  **/
  @Schema(description = "A human readable name for a germplasm")
  public String getDefaultDisplayName() {
    return defaultDisplayName;
  }

  public void setDefaultDisplayName(String defaultDisplayName) {
    this.defaultDisplayName = defaultDisplayName;
  }

  public Progeny germplasmDbId(String germplasmDbId) {
    this.germplasmDbId = germplasmDbId;
    return this;
  }

   /**
   * The ID which uniquely identifies a germplasm
   * @return germplasmDbId
  **/
  @Schema(description = "The ID which uniquely identifies a germplasm")
  public String getGermplasmDbId() {
    return germplasmDbId;
  }

  public void setGermplasmDbId(String germplasmDbId) {
    this.germplasmDbId = germplasmDbId;
  }

  public Progeny progeny(List<ProgenyProgeny> progeny) {
    this.progeny = progeny;
    return this;
  }

  public Progeny addProgenyItem(ProgenyProgeny progenyItem) {
    if (this.progeny == null) {
      this.progeny = new ArrayList<ProgenyProgeny>();
    }
    this.progeny.add(progenyItem);
    return this;
  }

   /**
   * List of germplasm entities which are direct children of this germplasm
   * @return progeny
  **/
  @Schema(description = "List of germplasm entities which are direct children of this germplasm")
  public List<ProgenyProgeny> getProgeny() {
    return progeny;
  }

  public void setProgeny(List<ProgenyProgeny> progeny) {
    this.progeny = progeny;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Progeny progeny = (Progeny) o;
    return Objects.equals(this.defaultDisplayName, progeny.defaultDisplayName) &&
        Objects.equals(this.germplasmDbId, progeny.germplasmDbId) &&
        Objects.equals(this.progeny, progeny.progeny);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultDisplayName, germplasmDbId, progeny);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Progeny {\n");
    
    sb.append("    defaultDisplayName: ").append(toIndentedString(defaultDisplayName)).append("\n");
    sb.append("    germplasmDbId: ").append(toIndentedString(germplasmDbId)).append("\n");
    sb.append("    progeny: ").append(toIndentedString(progeny)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
