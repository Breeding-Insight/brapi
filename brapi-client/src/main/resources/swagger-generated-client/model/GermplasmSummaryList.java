/*
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.client.model.GermplasmSummary;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * GermplasmSummaryList
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-08-25T02:56:46.257Z[GMT]")
public class GermplasmSummaryList {
  @SerializedName("data")
  private List<GermplasmSummary> data = null;

  @SerializedName("studyDbId")
  private String studyDbId = null;

  @SerializedName("trialName")
  private String trialName = null;

  public GermplasmSummaryList data(List<GermplasmSummary> data) {
    this.data = data;
    return this;
  }

  public GermplasmSummaryList addDataItem(GermplasmSummary dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<GermplasmSummary>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * List of germplasm associated with a given trial and study
   * @return data
  **/
  @Schema(description = "List of germplasm associated with a given trial and study")
  public List<GermplasmSummary> getData() {
    return data;
  }

  public void setData(List<GermplasmSummary> data) {
    this.data = data;
  }

  public GermplasmSummaryList studyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
    return this;
  }

   /**
   * ** Deprecated ** The request contains the studyDbId The ID which uniquely identifies a study within the given database server
   * @return studyDbId
  **/
  @Schema(description = "** Deprecated ** The request contains the studyDbId The ID which uniquely identifies a study within the given database server")
  public String getStudyDbId() {
    return studyDbId;
  }

  public void setStudyDbId(String studyDbId) {
    this.studyDbId = studyDbId;
  }

  public GermplasmSummaryList trialName(String trialName) {
    this.trialName = trialName;
    return this;
  }

   /**
   * ** Deprecated ** trialName not relevent  The human readable name of a trial
   * @return trialName
  **/
  @Schema(description = "** Deprecated ** trialName not relevent  The human readable name of a trial")
  public String getTrialName() {
    return trialName;
  }

  public void setTrialName(String trialName) {
    this.trialName = trialName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GermplasmSummaryList germplasmSummaryList = (GermplasmSummaryList) o;
    return Objects.equals(this.data, germplasmSummaryList.data) &&
        Objects.equals(this.studyDbId, germplasmSummaryList.studyDbId) &&
        Objects.equals(this.trialName, germplasmSummaryList.trialName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, studyDbId, trialName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GermplasmSummaryList {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    studyDbId: ").append(toIndentedString(studyDbId)).append("\n");
    sb.append("    trialName: ").append(toIndentedString(trialName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
