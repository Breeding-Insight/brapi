/*
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.client.model.Method;
import io.swagger.client.model.OntologyReference;
import io.swagger.client.model.Scale;
import io.swagger.client.model.Trait;
import io.swagger.client.model.VariableBaseClass;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.OffsetDateTime;
/**
 * ObservationVariable
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-08-25T02:56:46.257Z[GMT]")
public class ObservationVariable extends VariableBaseClass {
  @SerializedName("date")
  private String date = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("observationVariableDbId")
  private String observationVariableDbId = null;

  @SerializedName("observationVariableName")
  private String observationVariableName = null;

  public ObservationVariable date(String date) {
    this.date = date;
    return this;
  }

   /**
   * DEPRECATED in v1.3 - see \&quot;submissionTimestamp\&quot;
   * @return date
  **/
  @Schema(description = "DEPRECATED in v1.3 - see \"submissionTimestamp\"")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public ObservationVariable name(String name) {
    this.name = name;
    return this;
  }

   /**
   * DEPRECATED in v1.3 - Use \&quot;observationVariableName\&quot;
   * @return name
  **/
  @Schema(description = "DEPRECATED in v1.3 - Use \"observationVariableName\"")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ObservationVariable observationVariableDbId(String observationVariableDbId) {
    this.observationVariableDbId = observationVariableDbId;
    return this;
  }

   /**
   * Variable unique identifier
   * @return observationVariableDbId
  **/
  @Schema(required = true, description = "Variable unique identifier")
  public String getObservationVariableDbId() {
    return observationVariableDbId;
  }

  public void setObservationVariableDbId(String observationVariableDbId) {
    this.observationVariableDbId = observationVariableDbId;
  }

  public ObservationVariable observationVariableName(String observationVariableName) {
    this.observationVariableName = observationVariableName;
    return this;
  }

   /**
   * Variable name (usually a short name)
   * @return observationVariableName
  **/
  @Schema(required = true, description = "Variable name (usually a short name)")
  public String getObservationVariableName() {
    return observationVariableName;
  }

  public void setObservationVariableName(String observationVariableName) {
    this.observationVariableName = observationVariableName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObservationVariable observationVariable = (ObservationVariable) o;
    return Objects.equals(this.date, observationVariable.date) &&
        Objects.equals(this.name, observationVariable.name) &&
        Objects.equals(this.observationVariableDbId, observationVariable.observationVariableDbId) &&
        Objects.equals(this.observationVariableName, observationVariable.observationVariableName) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, name, observationVariableDbId, observationVariableName, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObservationVariable {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    observationVariableDbId: ").append(toIndentedString(observationVariableDbId)).append("\n");
    sb.append("    observationVariableName: ").append(toIndentedString(observationVariableName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
