/*
 * BrAPI
 * The Breeding API (BrAPI) is a Standardized RESTful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding.  <strong>General Reference Documentation</strong>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a>  <a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Asychronous_Processing.md\">Asynchronous Processing</a>
 *
 * OpenAPI spec version: 1.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import org.threeten.bp.LocalDate;
/**
 * GermplasmAttribute
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-08-25T02:56:46.257Z[GMT]")
public class GermplasmAttribute {
  @SerializedName("attributeCode")
  private String attributeCode = null;

  @SerializedName("attributeDbId")
  private String attributeDbId = null;

  @SerializedName("attributeName")
  private String attributeName = null;

  @SerializedName("determinedDate")
  private LocalDate determinedDate = null;

  @SerializedName("value")
  private String value = null;

  public GermplasmAttribute attributeCode(String attributeCode) {
    this.attributeCode = attributeCode;
    return this;
  }

   /**
   * Short abbreviation which represents this attribute
   * @return attributeCode
  **/
  @Schema(description = "Short abbreviation which represents this attribute")
  public String getAttributeCode() {
    return attributeCode;
  }

  public void setAttributeCode(String attributeCode) {
    this.attributeCode = attributeCode;
  }

  public GermplasmAttribute attributeDbId(String attributeDbId) {
    this.attributeDbId = attributeDbId;
    return this;
  }

   /**
   * The ID which uniquely identifies this attribute within the given database server
   * @return attributeDbId
  **/
  @Schema(description = "The ID which uniquely identifies this attribute within the given database server")
  public String getAttributeDbId() {
    return attributeDbId;
  }

  public void setAttributeDbId(String attributeDbId) {
    this.attributeDbId = attributeDbId;
  }

  public GermplasmAttribute attributeName(String attributeName) {
    this.attributeName = attributeName;
    return this;
  }

   /**
   * The human readable name of this attribute
   * @return attributeName
  **/
  @Schema(description = "The human readable name of this attribute")
  public String getAttributeName() {
    return attributeName;
  }

  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }

  public GermplasmAttribute determinedDate(LocalDate determinedDate) {
    this.determinedDate = determinedDate;
    return this;
  }

   /**
   * The date the value of this attribute was determined for a given germplasm
   * @return determinedDate
  **/
  @Schema(description = "The date the value of this attribute was determined for a given germplasm")
  public LocalDate getDeterminedDate() {
    return determinedDate;
  }

  public void setDeterminedDate(LocalDate determinedDate) {
    this.determinedDate = determinedDate;
  }

  public GermplasmAttribute value(String value) {
    this.value = value;
    return this;
  }

   /**
   * The value of this attribute for a given germplasm
   * @return value
  **/
  @Schema(description = "The value of this attribute for a given germplasm")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GermplasmAttribute germplasmAttribute = (GermplasmAttribute) o;
    return Objects.equals(this.attributeCode, germplasmAttribute.attributeCode) &&
        Objects.equals(this.attributeDbId, germplasmAttribute.attributeDbId) &&
        Objects.equals(this.attributeName, germplasmAttribute.attributeName) &&
        Objects.equals(this.determinedDate, germplasmAttribute.determinedDate) &&
        Objects.equals(this.value, germplasmAttribute.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeCode, attributeDbId, attributeName, determinedDate, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GermplasmAttribute {\n");
    
    sb.append("    attributeCode: ").append(toIndentedString(attributeCode)).append("\n");
    sb.append("    attributeDbId: ").append(toIndentedString(attributeDbId)).append("\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    determinedDate: ").append(toIndentedString(determinedDate)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
