/*
 * BrAPI-Genotyping
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/RESTfulness\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Response_Structure\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Dates_and_Times\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Location_Coordinates\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Error_Handling\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://wiki.brapi.org/index.php/Search_Services\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.1</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/brapi-V2.1/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm/2.1\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm21.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.brapi.client.v21.modules.genotype;

import com.google.gson.reflect.TypeToken;
import org.brapi.client.v21.*;
import org.brapi.client.v21.model.queryParams.genotype.VariantSetQueryParams;
import org.brapi.model.v21.genotype.*;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VariantSetsApi {
    private ApiClient apiClient;

    public VariantSetsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VariantSetsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for searchVariantsetsPost
     *
     * @param body                    Study Search request (optional)
     * @param authorization           HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call searchVariantsetsPostCall(VariantSetsSearchRequest body, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        // create path and map variables
        String localVarPath = "/search/variantsets";

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();

        Map<String, String> localVarHeaderParams = new HashMap<>();
        if (authorization != null)
            localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
                "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, body, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call searchVariantsetsPostValidateBeforeCall(VariantSetsSearchRequest body, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        return searchVariantsetsPostCall(body, authorization, progressListener, progressRequestListener);


    }

    /**
     * Submit a search request for &#x60;VariantSets&#x60;
     * Submit a search request for &#x60;VariantSets&#x60;&lt;br/&gt; Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use the corresponding &#x60;GET /search/variantsets/{searchResultsDbId}&#x60; to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @param body          Study Search request (optional)
     * @param authorization HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return VariantSetsListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public VariantSetsListResponse searchVariantsetsPost(VariantSetsSearchRequest body, String authorization) throws ApiException {
        ApiResponse<VariantSetsListResponse> resp = searchVariantsetsPostWithHttpInfo(body, authorization);
        return resp.getData();
    }

    /**
     * Submit a search request for &#x60;VariantSets&#x60;
     * Submit a search request for &#x60;VariantSets&#x60;&lt;br/&gt; Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use the corresponding &#x60;GET /search/variantsets/{searchResultsDbId}&#x60; to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @param body          Study Search request (optional)
     * @param authorization HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return ApiResponse&lt;VariantSetsListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<VariantSetsListResponse> searchVariantsetsPostWithHttpInfo(VariantSetsSearchRequest body, String authorization) throws ApiException {
        com.squareup.okhttp.Call call = searchVariantsetsPostValidateBeforeCall(body, authorization, null, null);
        Type localVarReturnType = new TypeToken<VariantSetsListResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Submit a search request for &#x60;VariantSets&#x60; (asynchronously)
     * Submit a search request for &#x60;VariantSets&#x60;&lt;br/&gt; Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use the corresponding &#x60;GET /search/variantsets/{searchResultsDbId}&#x60; to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @param body          Study Search request (optional)
     * @param authorization HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param callback      The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call searchVariantsetsPostAsync(VariantSetsSearchRequest body, String authorization, final ApiCallback<VariantSetsListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = searchVariantsetsPostValidateBeforeCall(body, authorization, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<VariantSetsListResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for searchVariantsetsSearchResultsDbIdGet
     *
     * @param searchResultsDbId       Unique identifier which references the search results (required)
     * @param page                    Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize                The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization           HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call searchVariantsetsSearchResultsDbIdGetCall(String searchResultsDbId, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/search/variantsets/{searchResultsDbId}"
                .replaceAll("\\{" + "searchResultsDbId" + "}", apiClient.escapeString(searchResultsDbId));

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();
        if (page != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("page", page));
        if (pageSize != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("pageSize", pageSize));

        Map<String, String> localVarHeaderParams = new HashMap<>();
        if (authorization != null)
            localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {

        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call searchVariantsetsSearchResultsDbIdGetValidateBeforeCall(String searchResultsDbId, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'searchResultsDbId' is set
        if (searchResultsDbId == null) {
            throw new ApiException("Missing the required parameter 'searchResultsDbId' when calling searchVariantsetsSearchResultsDbIdGet(Async)");
        }

        return searchVariantsetsSearchResultsDbIdGetCall(searchResultsDbId, page, pageSize, authorization, progressListener, progressRequestListener);


    }

    /**
     * Get the results of a &#x60;VariantSets&#x60; search request
     * Get the results of a &#x60;VariantSets&#x60; search request &lt;br/&gt; Clients should submit a search request using the corresponding &#x60;POST /search/variantsets&#x60; endpoint. Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use this endpoint to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @param searchResultsDbId Unique identifier which references the search results (required)
     * @param page              Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize          The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization     HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return VariantSetsListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public VariantSetsListResponse searchVariantsetsSearchResultsDbIdGet(String searchResultsDbId, Integer page, Integer pageSize, String authorization) throws ApiException {
        ApiResponse<VariantSetsListResponse> resp = searchVariantsetsSearchResultsDbIdGetWithHttpInfo(searchResultsDbId, page, pageSize, authorization);
        return resp.getData();
    }

    /**
     * Get the results of a &#x60;VariantSets&#x60; search request
     * Get the results of a &#x60;VariantSets&#x60; search request &lt;br/&gt; Clients should submit a search request using the corresponding &#x60;POST /search/variantsets&#x60; endpoint. Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use this endpoint to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @param searchResultsDbId Unique identifier which references the search results (required)
     * @param page              Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize          The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization     HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return ApiResponse&lt;VariantSetsListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<VariantSetsListResponse> searchVariantsetsSearchResultsDbIdGetWithHttpInfo(String searchResultsDbId, Integer page, Integer pageSize, String authorization) throws ApiException {
        com.squareup.okhttp.Call call = searchVariantsetsSearchResultsDbIdGetValidateBeforeCall(searchResultsDbId, page, pageSize, authorization, null, null);
        Type localVarReturnType = new TypeToken<VariantSetsListResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Get the results of a &#x60;VariantSets&#x60; search request (asynchronously)
     * Get the results of a &#x60;VariantSets&#x60; search request &lt;br/&gt; Clients should submit a search request using the corresponding &#x60;POST /search/variantsets&#x60; endpoint. Search requests allow a client to send a complex query for data. However, the server may not respond with the search results immediately.  If a server needs more time to process the request, it might respond with a &#x60;searchResultsDbId&#x60;.  Use this endpoint to retrieve the results of the search. &lt;br/&gt;  Review the &lt;a target&#x3D;\&quot;_blank\&quot; href&#x3D;\&quot;https://wiki.brapi.org/index.php/Search_Services#POST_Search_Entity\&quot;&gt;Search Services documentation&lt;/a&gt; for additional implementation details.
     *
     * @param searchResultsDbId Unique identifier which references the search results (required)
     * @param page              Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize          The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization     HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param callback          The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call searchVariantsetsSearchResultsDbIdGetAsync(String searchResultsDbId, Integer page, Integer pageSize, String authorization, final ApiCallback<VariantSetsListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = searchVariantsetsSearchResultsDbIdGetValidateBeforeCall(searchResultsDbId, page, pageSize, authorization, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<VariantSetsListResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for variantsetsExtractPost
     *
     * @param body                    Study Search request (optional)
     * @param authorization           HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call variantsetsExtractPostCall(VariantSetsExtractRequest body, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        // create path and map variables
        String localVarPath = "/variantsets/extract";

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();

        Map<String, String> localVarHeaderParams = new HashMap<>();
        if (authorization != null)
            localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
                "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, body, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call variantsetsExtractPostValidateBeforeCall(VariantSetsExtractRequest body, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        return variantsetsExtractPostCall(body, authorization, progressListener, progressRequestListener);


    }

    /**
     * Create new &#x60;VariantSet&#x60; based on search results
     * Will perform a search for &#x60;Calls&#x60; which match the search criteria in &#x60;variantSetsExtractRequest&#x60;. The results of the search will be used to create a new &#x60;VariantSet&#x60; on the server. The new &#x60;VariantSet&#x60; will be returned.
     *
     * @param body          Study Search request (optional)
     * @param authorization HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return VariantSetResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public VariantSetResponse variantsetsExtractPost(VariantSetsExtractRequest body, String authorization) throws ApiException {
        ApiResponse<VariantSetResponse> resp = variantsetsExtractPostWithHttpInfo(body, authorization);
        return resp.getData();
    }

    /**
     * Create new &#x60;VariantSet&#x60; based on search results
     * Will perform a search for &#x60;Calls&#x60; which match the search criteria in &#x60;variantSetsExtractRequest&#x60;. The results of the search will be used to create a new &#x60;VariantSet&#x60; on the server. The new &#x60;VariantSet&#x60; will be returned.
     *
     * @param body          Study Search request (optional)
     * @param authorization HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return ApiResponse&lt;VariantSetResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<VariantSetResponse> variantsetsExtractPostWithHttpInfo(VariantSetsExtractRequest body, String authorization) throws ApiException {
        com.squareup.okhttp.Call call = variantsetsExtractPostValidateBeforeCall(body, authorization, null, null);
        Type localVarReturnType = new TypeToken<VariantSetResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create new &#x60;VariantSet&#x60; based on search results (asynchronously)
     * Will perform a search for &#x60;Calls&#x60; which match the search criteria in &#x60;variantSetsExtractRequest&#x60;. The results of the search will be used to create a new &#x60;VariantSet&#x60; on the server. The new &#x60;VariantSet&#x60; will be returned.
     *
     * @param body          Study Search request (optional)
     * @param authorization HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param callback      The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call variantsetsExtractPostAsync(VariantSetsExtractRequest body, String authorization, final ApiCallback<VariantSetResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = variantsetsExtractPostValidateBeforeCall(body, authorization, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<VariantSetResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for variantsetsGet
     *
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call variantsetsGetCall(VariantSetQueryParams queryParams, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/variantsets";

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();

        Map<String, String> localVarHeaderParams = new HashMap<>();

        queryParams.buildQueryParams(apiClient, localVarQueryParams, localVarHeaderParams);

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {

        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call variantsetsGetValidateBeforeCall(VariantSetQueryParams queryParams, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        return variantsetsGetCall(queryParams, progressListener, progressRequestListener);


    }

    /**
     * Gets a filtered list of &#x60;VariantSets&#x60;.
     *
     * @return VariantSetsListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public VariantSetsListResponse variantsetsGet(VariantSetQueryParams queryParams) throws ApiException {
        ApiResponse<VariantSetsListResponse> resp = variantsetsGetWithHttpInfo(queryParams);
        return resp.getData();
    }

    /**
     * Gets a filtered list of &#x60;VariantSets&#x60;.
     *
     * @return ApiResponse&lt;VariantSetsListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<VariantSetsListResponse> variantsetsGetWithHttpInfo(VariantSetQueryParams queryParams) throws ApiException {
        com.squareup.okhttp.Call call = variantsetsGetValidateBeforeCall(queryParams, null, null);
        Type localVarReturnType = new TypeToken<VariantSetsListResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Gets a filtered list of &#x60;VariantSets&#x60;. (asynchronously)
     *
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call variantsetsGetAsync(VariantSetQueryParams queryParams, final ApiCallback<VariantSetsListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = variantsetsGetValidateBeforeCall(queryParams, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<VariantSetsListResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for variantsetsVariantSetDbIdCallsGet
     *
     * @param variantSetDbId          The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param expandHomozygotes       Should homozygotes be expanded (true) or collapsed into a single occurrence (false) (optional)
     * @param unknownString           The string to use as a representation for missing data (optional)
     * @param sepPhased               The string to use as a separator for phased allele calls (optional)
     * @param sepUnphased             The string to use as a separator for unphased allele calls (optional)
     * @param pageToken               **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page                    Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize                The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization           HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdCallsGetCall(String variantSetDbId, Boolean expandHomozygotes, String unknownString, String sepPhased, String sepUnphased, String pageToken, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/variantsets/{variantSetDbId}/calls"
                .replaceAll("\\{" + "variantSetDbId" + "}", apiClient.escapeString(variantSetDbId));

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();
        if (expandHomozygotes != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("expandHomozygotes", expandHomozygotes));
        if (unknownString != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("unknownString", unknownString));
        if (sepPhased != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("sepPhased", sepPhased));
        if (sepUnphased != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("sepUnphased", sepUnphased));
        if (pageToken != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("pageToken", pageToken));
        if (page != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("page", page));
        if (pageSize != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("pageSize", pageSize));

        Map<String, String> localVarHeaderParams = new HashMap<>();
        if (authorization != null)
            localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {

        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call variantsetsVariantSetDbIdCallsGetValidateBeforeCall(String variantSetDbId, Boolean expandHomozygotes, String unknownString, String sepPhased, String sepUnphased, String pageToken, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'variantSetDbId' is set
        if (variantSetDbId == null) {
            throw new ApiException("Missing the required parameter 'variantSetDbId' when calling variantsetsVariantSetDbIdCallsGet(Async)");
        }

        return variantsetsVariantSetDbIdCallsGetCall(variantSetDbId, expandHomozygotes, unknownString, sepPhased, sepUnphased, pageToken, page, pageSize, authorization, progressListener, progressRequestListener);


    }

    /**
     * Gets a list of &#x60;Calls&#x60; associated with a &#x60;VariantSet&#x60;.
     * Gets a list of &#x60;Calls&#x60; associated with a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId    The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param expandHomozygotes Should homozygotes be expanded (true) or collapsed into a single occurrence (false) (optional)
     * @param unknownString     The string to use as a representation for missing data (optional)
     * @param sepPhased         The string to use as a separator for phased allele calls (optional)
     * @param sepUnphased       The string to use as a separator for unphased allele calls (optional)
     * @param pageToken         **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page              Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize          The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization     HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return CallsListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CallsListResponse variantsetsVariantSetDbIdCallsGet(String variantSetDbId, Boolean expandHomozygotes, String unknownString, String sepPhased, String sepUnphased, String pageToken, Integer page, Integer pageSize, String authorization) throws ApiException {
        ApiResponse<CallsListResponse> resp = variantsetsVariantSetDbIdCallsGetWithHttpInfo(variantSetDbId, expandHomozygotes, unknownString, sepPhased, sepUnphased, pageToken, page, pageSize, authorization);
        return resp.getData();
    }

    /**
     * Gets a list of &#x60;Calls&#x60; associated with a &#x60;VariantSet&#x60;.
     * Gets a list of &#x60;Calls&#x60; associated with a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId    The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param expandHomozygotes Should homozygotes be expanded (true) or collapsed into a single occurrence (false) (optional)
     * @param unknownString     The string to use as a representation for missing data (optional)
     * @param sepPhased         The string to use as a separator for phased allele calls (optional)
     * @param sepUnphased       The string to use as a separator for unphased allele calls (optional)
     * @param pageToken         **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page              Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize          The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization     HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return ApiResponse&lt;CallsListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CallsListResponse> variantsetsVariantSetDbIdCallsGetWithHttpInfo(String variantSetDbId, Boolean expandHomozygotes, String unknownString, String sepPhased, String sepUnphased, String pageToken, Integer page, Integer pageSize, String authorization) throws ApiException {
        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdCallsGetValidateBeforeCall(variantSetDbId, expandHomozygotes, unknownString, sepPhased, sepUnphased, pageToken, page, pageSize, authorization, null, null);
        Type localVarReturnType = new TypeToken<CallsListResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Gets a list of &#x60;Calls&#x60; associated with a &#x60;VariantSet&#x60;. (asynchronously)
     * Gets a list of &#x60;Calls&#x60; associated with a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId    The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param expandHomozygotes Should homozygotes be expanded (true) or collapsed into a single occurrence (false) (optional)
     * @param unknownString     The string to use as a representation for missing data (optional)
     * @param sepPhased         The string to use as a separator for phased allele calls (optional)
     * @param sepUnphased       The string to use as a separator for unphased allele calls (optional)
     * @param pageToken         **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page              Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize          The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization     HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param callback          The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdCallsGetAsync(String variantSetDbId, Boolean expandHomozygotes, String unknownString, String sepPhased, String sepUnphased, String pageToken, Integer page, Integer pageSize, String authorization, final ApiCallback<CallsListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdCallsGetValidateBeforeCall(variantSetDbId, expandHomozygotes, unknownString, sepPhased, sepUnphased, pageToken, page, pageSize, authorization, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CallsListResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for variantsetsVariantSetDbIdCallsetsGet
     *
     * @param variantSetDbId          The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param callSetDbId             The ID of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param callSetName             The human readable name of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param page                    Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize                The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization           HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdCallsetsGetCall(String variantSetDbId, String callSetDbId, String callSetName, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/variantsets/{variantSetDbId}/callsets"
                .replaceAll("\\{" + "variantSetDbId" + "}", apiClient.escapeString(variantSetDbId));

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();
        if (callSetDbId != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("callSetDbId", callSetDbId));
        if (callSetName != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("callSetName", callSetName));
        if (page != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("page", page));
        if (pageSize != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("pageSize", pageSize));

        Map<String, String> localVarHeaderParams = new HashMap<>();
        if (authorization != null)
            localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {

        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call variantsetsVariantSetDbIdCallsetsGetValidateBeforeCall(String variantSetDbId, String callSetDbId, String callSetName, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'variantSetDbId' is set
        if (variantSetDbId == null) {
            throw new ApiException("Missing the required parameter 'variantSetDbId' when calling variantsetsVariantSetDbIdCallsetsGet(Async)");
        }

        return variantsetsVariantSetDbIdCallsetsGetCall(variantSetDbId, callSetDbId, callSetName, page, pageSize, authorization, progressListener, progressRequestListener);


    }

    /**
     * Gets a list of &#x60;CallSets&#x60; associated with a &#x60;VariantSet&#x60;.
     * Gets a list of &#x60;CallSets&#x60; associated with a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param callSetDbId    The ID of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param callSetName    The human readable name of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param page           Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize       The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return CallSetsListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public CallSetsListResponse variantsetsVariantSetDbIdCallsetsGet(String variantSetDbId, String callSetDbId, String callSetName, Integer page, Integer pageSize, String authorization) throws ApiException {
        ApiResponse<CallSetsListResponse> resp = variantsetsVariantSetDbIdCallsetsGetWithHttpInfo(variantSetDbId, callSetDbId, callSetName, page, pageSize, authorization);
        return resp.getData();
    }

    /**
     * Gets a list of &#x60;CallSets&#x60; associated with a &#x60;VariantSet&#x60;.
     * Gets a list of &#x60;CallSets&#x60; associated with a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param callSetDbId    The ID of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param callSetName    The human readable name of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param page           Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize       The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return ApiResponse&lt;CallSetsListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<CallSetsListResponse> variantsetsVariantSetDbIdCallsetsGetWithHttpInfo(String variantSetDbId, String callSetDbId, String callSetName, Integer page, Integer pageSize, String authorization) throws ApiException {
        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdCallsetsGetValidateBeforeCall(variantSetDbId, callSetDbId, callSetName, page, pageSize, authorization, null, null);
        Type localVarReturnType = new TypeToken<CallSetsListResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Gets a list of &#x60;CallSets&#x60; associated with a &#x60;VariantSet&#x60;. (asynchronously)
     * Gets a list of &#x60;CallSets&#x60; associated with a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param callSetDbId    The ID of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param callSetName    The human readable name of the &#x60;CallSet&#x60; to be retrieved. (optional)
     * @param page           Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize       The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param callback       The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdCallsetsGetAsync(String variantSetDbId, String callSetDbId, String callSetName, Integer page, Integer pageSize, String authorization, final ApiCallback<CallSetsListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdCallsetsGetValidateBeforeCall(variantSetDbId, callSetDbId, callSetName, page, pageSize, authorization, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<CallSetsListResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for variantsetsVariantSetDbIdGet
     *
     * @param variantSetDbId          The ID of the &#x60;Variant&#x60; to be retrieved. (required)
     * @param authorization           HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdGetCall(String variantSetDbId, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/variantsets/{variantSetDbId}"
                .replaceAll("\\{" + "variantSetDbId" + "}", apiClient.escapeString(variantSetDbId));

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();

        Map<String, String> localVarHeaderParams = new HashMap<>();
        if (authorization != null)
            localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {

        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call variantsetsVariantSetDbIdGetValidateBeforeCall(String variantSetDbId, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'variantSetDbId' is set
        if (variantSetDbId == null) {
            throw new ApiException("Missing the required parameter 'variantSetDbId' when calling variantsetsVariantSetDbIdGet(Async)");
        }

        return variantsetsVariantSetDbIdGetCall(variantSetDbId, authorization, progressListener, progressRequestListener);


    }

    /**
     * Gets a &#x60;VariantSet&#x60; by ID.
     * This call will return a JSON version of a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;Variant&#x60; to be retrieved. (required)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return VariantSetResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public VariantSetResponse variantsetsVariantSetDbIdGet(String variantSetDbId, String authorization) throws ApiException {
        ApiResponse<VariantSetResponse> resp = variantsetsVariantSetDbIdGetWithHttpInfo(variantSetDbId, authorization);
        return resp.getData();
    }

    /**
     * Gets a &#x60;VariantSet&#x60; by ID.
     * This call will return a JSON version of a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;Variant&#x60; to be retrieved. (required)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return ApiResponse&lt;VariantSetResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<VariantSetResponse> variantsetsVariantSetDbIdGetWithHttpInfo(String variantSetDbId, String authorization) throws ApiException {
        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdGetValidateBeforeCall(variantSetDbId, authorization, null, null);
        Type localVarReturnType = new TypeToken<VariantSetResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Gets a &#x60;VariantSet&#x60; by ID. (asynchronously)
     * This call will return a JSON version of a &#x60;VariantSet&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;Variant&#x60; to be retrieved. (required)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param callback       The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdGetAsync(String variantSetDbId, String authorization, final ApiCallback<VariantSetResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdGetValidateBeforeCall(variantSetDbId, authorization, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<VariantSetResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for variantsetsVariantSetDbIdVariantsGet
     *
     * @param variantSetDbId          The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param variantDbId             The ID of the &#x60;Variant&#x60; to be retrieved. (optional)
     * @param pageToken               **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page                    Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize                The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization           HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdVariantsGetCall(String variantSetDbId, String variantDbId, String pageToken, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/variantsets/{variantSetDbId}/variants"
                .replaceAll("\\{" + "variantSetDbId" + "}", apiClient.escapeString(variantSetDbId));

        List<Pair> localVarQueryParams = new ArrayList<>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<>();
        if (variantDbId != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("variantDbId", variantDbId));
        if (pageToken != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("pageToken", pageToken));
        if (page != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("page", page));
        if (pageSize != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("pageSize", pageSize));

        Map<String, String> localVarHeaderParams = new HashMap<>();
        if (authorization != null)
            localVarHeaderParams.put("Authorization", apiClient.parameterToString(authorization));

        Map<String, Object> localVarFormParams = new HashMap<>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {

        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if (progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(chain -> {
                com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                return originalResponse.newBuilder()
                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                        .build();
            });
        }

        String[] localVarAuthNames = new String[]{"AuthorizationToken"};
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    private com.squareup.okhttp.Call variantsetsVariantSetDbIdVariantsGetValidateBeforeCall(String variantSetDbId, String variantDbId, String pageToken, Integer page, Integer pageSize, String authorization, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'variantSetDbId' is set
        if (variantSetDbId == null) {
            throw new ApiException("Missing the required parameter 'variantSetDbId' when calling variantsetsVariantSetDbIdVariantsGet(Async)");
        }

        return variantsetsVariantSetDbIdVariantsGetCall(variantSetDbId, variantDbId, pageToken, page, pageSize, authorization, progressListener, progressRequestListener);


    }

    /**
     * Gets a &#x60;Variants&#x60; for a given &#x60;VariantSet&#x60;.
     * This call will return an array of &#x60;Variants&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param variantDbId    The ID of the &#x60;Variant&#x60; to be retrieved. (optional)
     * @param pageToken      **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page           Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize       The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return VariantsListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public VariantsListResponse variantsetsVariantSetDbIdVariantsGet(String variantSetDbId, String variantDbId, String pageToken, Integer page, Integer pageSize, String authorization) throws ApiException {
        ApiResponse<VariantsListResponse> resp = variantsetsVariantSetDbIdVariantsGetWithHttpInfo(variantSetDbId, variantDbId, pageToken, page, pageSize, authorization);
        return resp.getData();
    }

    /**
     * Gets a &#x60;Variants&#x60; for a given &#x60;VariantSet&#x60;.
     * This call will return an array of &#x60;Variants&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param variantDbId    The ID of the &#x60;Variant&#x60; to be retrieved. (optional)
     * @param pageToken      **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page           Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize       The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @return ApiResponse&lt;VariantsListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<VariantsListResponse> variantsetsVariantSetDbIdVariantsGetWithHttpInfo(String variantSetDbId, String variantDbId, String pageToken, Integer page, Integer pageSize, String authorization) throws ApiException {
        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdVariantsGetValidateBeforeCall(variantSetDbId, variantDbId, pageToken, page, pageSize, authorization, null, null);
        Type localVarReturnType = new TypeToken<VariantsListResponse>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Gets a &#x60;Variants&#x60; for a given &#x60;VariantSet&#x60;. (asynchronously)
     * This call will return an array of &#x60;Variants&#x60;.
     *
     * @param variantSetDbId The ID of the &#x60;VariantSet&#x60; to be retrieved. (required)
     * @param variantDbId    The ID of the &#x60;Variant&#x60; to be retrieved. (optional)
     * @param pageToken      **Deprecated in v2.1** Please use &#x60;page&#x60;. Github issue number #451  &lt;br&gt; Used to request a specific page of data to be returned. &lt;br&gt; Tokenized pages are for large data sets which can not be efficiently broken into indexed pages. Use the nextPageToken and prevPageToken from a prior response to construct a query and move to the next or previous page respectively.  (optional)
     * @param page           Used to request a specific page of data to be returned.  The page indexing starts at 0 (the first page is &#x27;page&#x27;&#x3D; 0). Default is &#x60;0&#x60;. (optional)
     * @param pageSize       The size of the pages to be returned. Default is &#x60;1000&#x60;. (optional)
     * @param authorization  HTTP HEADER - Token used for Authorization   &lt;strong&gt; Bearer {token_string} &lt;/strong&gt; (optional)
     * @param callback       The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call variantsetsVariantSetDbIdVariantsGetAsync(String variantSetDbId, String variantDbId, String pageToken, Integer page, Integer pageSize, String authorization, final ApiCallback<VariantsListResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = callback::onDownloadProgress;

            progressRequestListener = callback::onUploadProgress;
        }

        com.squareup.okhttp.Call call = variantsetsVariantSetDbIdVariantsGetValidateBeforeCall(variantSetDbId, variantDbId, pageToken, page, pageSize, authorization, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<VariantsListResponse>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
